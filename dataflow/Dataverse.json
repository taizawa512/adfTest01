{
	"name": "Dataverse",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ExcelForDynamics365",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DynamicsEntity365_account",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     test as string ({顧客})",
				"}",
				"source(output(",
				"          {受注ID} as string,",
				"          {名前} as string,",
				"          {ステータス} as string,",
				"          {合計金額} as string,",
				"          {顧客} as string,",
				"          {電子メール (顧客) (取引先担当者 )} as string,",
				"          Type as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(odata = iif(isNull({顧客}), toString(null()), concat('contacts/',{顧客})),",
				"          odata2 = iif(isNull({顧客}), toString(null()), concat(concat('/contacts(',{顧客}), ')'))) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          accountid = {受注ID},",
				"          {primarycontactid@odata.bind} = odata",
				"     )) ~> sink1"
			]
		}
	}
}