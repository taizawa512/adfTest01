{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-taizawa002"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureBlobStorage3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage3'"
		},
		"AzureBlobStorage4_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage4'"
		},
		"AzureBlobStorage5_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage5'"
		},
		"AzureBlobStorage6_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage6'"
		},
		"AzureBlobStorage7_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage7'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDataLakeStorage2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage2'"
		},
		"AzureDatabricks_LinkedService_001_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks_LinkedService_001'"
		},
		"AzureFileStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureFileStorage1'"
		},
		"AzurePostgreSql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzurePostgreSql1'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"AzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics1'"
		},
		"AzureSynapseAnalytics2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics2'"
		},
		"AzureSynapseAnalytics3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalytics3'"
		},
		"CosmosDb1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDb1'"
		},
		"CosmosDbMongoDbApi1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbMongoDbApi1'"
		},
		"Dynamics365_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Dynamics365'"
		},
		"FileServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FileServer1'"
		},
		"Salesforce1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Salesforce1'"
		},
		"Salesforce1_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'Salesforce1'"
		},
		"SalesforceServiceCloud1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SalesforceServiceCloud1'"
		},
		"SalesforceServiceCloud1_securityToken": {
			"type": "secureString",
			"metadata": "Secure string for 'securityToken' of 'SalesforceServiceCloud1'"
		},
		"SapTable1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SapTable1'"
		},
		"Sftp1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Sftp1'"
		},
		"SharePointOnlineList_admin2_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'SharePointOnlineList_admin2'"
		},
		"SharePointOnlineList_owner02_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'SharePointOnlineList_owner02'"
		},
		"incLoadTaizawa001_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'incLoadTaizawa001'"
		},
		"test_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'test'"
		},
		"ADLSGen2_datalakestoragetaizawa_MSI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakestoragetaizawa.dfs.core.windows.net/"
		},
		"AzureBlobStorage1_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://storageacctaizawa.blob.core.windows.net"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storageacctaizawa.dfs.core.windows.net"
		},
		"AzureDataLakeStorage2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakestoragetaizawa2.dfs.core.windows.net"
		},
		"CosmosDbMongoDbApi1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "test001"
		},
		"Dynamics365_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tokaneko-ADF-test@DynFTEJPN.onmicrosoft.com"
		},
		"FileServer1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\SHIR"
		},
		"FileServer1_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "redmond\\taizawa"
		},
		"Rest_storageacctaizawa_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storageacctaizawa.blob.core.windows.net/"
		},
		"Salesforce1_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://mskk-taizawa-dev-ed.my.salesforce.com"
		},
		"Salesforce1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "aizawax512+api01@gmail.com"
		},
		"SalesforceServiceCloud1_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://login.salesforce.com"
		},
		"SalesforceServiceCloud1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "testtest"
		},
		"SapTable1_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "test"
		},
		"SapTable1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "test"
		},
		"SapTable1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "test"
		},
		"SapTable1_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "test"
		},
		"Sftp1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "localhost"
		},
		"Sftp1_properties_typeProperties_hostKeyFingerprint": {
			"type": "string",
			"defaultValue": "ssh-rsa 3072 8c:bd:37:22:f2:c9:fa:4a:4c:cf:77:f8:14:34:e3:83"
		},
		"Sftp1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "administrator"
		},
		"SharePointOnlineList_admin2_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "bcb3ef6d-233f-4a5f-a65c-736adf68a47e"
		},
		"SharePointOnlineList_owner02_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "b129a7ab-f323-4f8d-83ef-102d320f3267"
		},
		"BlobEventsTrigger001_properties_TriggerTest_parameters_p1": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"BlobEventsTrigger001_properties_TriggerTest_parameters_p2": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"BlobEventsTrigger001_properties_TriggerTest_parameters_p3": {
			"type": "string",
			"defaultValue": "@triggerBody().startTime"
		},
		"BlobEventsTrigger001_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-taizawa001/providers/Microsoft.Storage/storageAccounts/datalakestoragetaizawa"
		},
		"SchduleTrigger001_properties_TriggerTest_parameters_p1": {
			"type": "string",
			"defaultValue": "param1"
		},
		"SchduleTrigger001_properties_TriggerTest_parameters_p2": {
			"type": "string",
			"defaultValue": "param2"
		},
		"SchduleTrigger001_properties_TriggerTest_parameters_p3": {
			"type": "string",
			"defaultValue": "param3"
		},
		"Schdule_TriggerTest003_properties_TriggerTest_parameters_p1": {
			"type": "string",
			"defaultValue": "1"
		},
		"Schdule_TriggerTest003_properties_TriggerTest_parameters_p2": {
			"type": "string",
			"defaultValue": "2"
		},
		"Schdule_TriggerTest003_properties_TriggerTest_parameters_p3": {
			"type": "string",
			"defaultValue": "3"
		},
		"Schedule_TriggerTest002_properties_TriggerTest_parameters_p1": {
			"type": "string",
			"defaultValue": "1"
		},
		"Schedule_TriggerTest002_properties_TriggerTest_parameters_p2": {
			"type": "string",
			"defaultValue": "2"
		},
		"Schedule_TriggerTest002_properties_TriggerTest_parameters_p3": {
			"type": "string",
			"defaultValue": "3"
		},
		"StorageEventTest_properties_TriggerTest_parameters_p1": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"StorageEventTest_properties_TriggerTest_parameters_p2": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"StorageEventTest_properties_TriggerTest_parameters_p3": {
			"type": "string",
			"defaultValue": "test"
		},
		"StorageEventTest_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-taizawa001/providers/Microsoft.Storage/storageAccounts/datalakestoragetaizawa"
		},
		"trigger2_properties_TriggerTest_parameters_p1": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"trigger2_properties_TriggerTest_parameters_p2": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"trigger2_properties_TriggerTest_parameters_p3": {
			"type": "string",
			"defaultValue": "@trigger().startTime"
		},
		"trigger2_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-taizawa001/providers/Microsoft.Storage/storageAccounts/storageacctaizawa"
		},
		"trigger3_properties_RenameTest_parameters_p1": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"trigger3_properties_RenameTest_parameters_p2": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"trigger3_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-taizawa001/providers/Microsoft.Storage/storageAccounts/storageacctaizawa"
		},
		"AzureFileStorage222_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-taizawa001/providers/Microsoft.Storage/storageAccounts/storageacctaizawa"
		},
		"AzureFileStorage222_properties_groupId": {
			"type": "string",
			"defaultValue": "file"
		},
		"AzureFileStorage222_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"storageacctaizawa.file.core.windows.net"
			]
		},
		"AzureFunction584_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/taizawaTest001_group/providers/Microsoft.Web/sites/taizawaTest001"
		},
		"AzureFunction584_properties_groupId": {
			"type": "string",
			"defaultValue": "sites"
		},
		"AzureSynapseAnalytics284_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-taizawa001/providers/Microsoft.Synapse/workspaces/taizawatest001"
		},
		"AzureSynapseAnalytics284_properties_groupId": {
			"type": "string",
			"defaultValue": "sql"
		},
		"AzureSynapseAnalytics284_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"taizawatest001.sql.azuresynapse.net"
			]
		},
		"PrivateLinkService892_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/mc_taizawaaksprivate0711_2_taizawaaksprivatecluster0711-2_japaneast/providers/Microsoft.Network/privateLinkServices/pls-a3cf84b5be1564d03a702771f8fcd5d0"
		},
		"PrivateLinkService892_properties_groupId": {
			"type": "string",
			"defaultValue": ""
		},
		"PrivateLinkService892_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"lb.private.contoso.com"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/2206030060000373_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2206030060000373",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "2206030060000373_in",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "2206030060000373",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2206030060000373_in')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2206270060000972')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DataFlowのソースで、完了後にファイルを移動するオプションの挙動を確認。",
				"activities": [
					{
						"name": "2206270060000972",
						"description": "DataFlowのソースで、完了後にファイルを移動するオプションの挙動を確認。",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlow_2206270060000972",
								"type": "DataFlowReference",
								"parameters": {
									"azureRootFolder": {
										"value": "'@{variables('azureRootFolder')}'",
										"type": "Expression"
									},
									"ftpFileName": {
										"value": "'@{variables('ftpFileName')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ADLSGen2": {
										"filePath": {
											"value": "@{variables('azureRootFolder')}/work",
											"type": "Expression"
										},
										"fileName": {
											"value": "@variables('ftpFileName')",
											"type": "Expression"
										}
									},
									"ADLSGen2out": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"azureRootFolder": {
						"type": "String",
						"defaultValue": "ETL/AD01"
					},
					"ftpFileName": {
						"type": "String",
						"defaultValue": "MKI_DMS_RECOVERY"
					}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DataFlow_2206270060000972')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2207060060000503_Rest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "REST_VM_start",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://management.azure.com/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-taizawa001/providers/Microsoft.Compute/virtualMachines/TaizawaTest01/start?api-version=2022-03-01",
							"method": "POST",
							"headers": {},
							"body": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					},
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "REST_VM_start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('status'), true)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "REST_SHIR_Get_Status",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://management.azure.com/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-taizawa001/providers/Microsoft.DataFactory/factories/ADF-taizawa002/integrationRuntimes/SHIR-taizawa1/getStatus?api-version=2018-06-01",
										"method": "POST",
										"headers": {},
										"body": {},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com/"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "REST_SHIR_Get_Status",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('REST_SHIR_Get_Status').output.properties.state,'Online')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Set variable2",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "status",
													"value": {
														"value": "@bool(false)",
														"type": "Expression"
													}
												}
											},
											{
												"name": "Wait1",
												"type": "Wait",
												"dependsOn": [
													{
														"activity": "Set variable2",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 30
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "status",
													"value": {
														"value": "@bool(true)",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							],
							"timeout": "0.00:30:00"
						}
					},
					{
						"name": "REST_VM_stop",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://management.azure.com/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-taizawa001/providers/Microsoft.Compute/virtualMachines/TaizawaTest01/deallocate?api-version=2022-03-01",
							"method": "POST",
							"headers": {},
							"body": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"status": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/2207060060000503_Rest_stop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "REST_VM_stop",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://management.azure.com/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-taizawa001/providers/Microsoft.Compute/virtualMachines/TaizawaTest01/deallocate?api-version=2022-03-01",
							"method": "POST",
							"headers": {},
							"body": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/7z_Copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "7z_Copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "7zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "7zip_ADLSGen2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/7zip')]",
				"[concat(variables('factoryId'), '/datasets/7zip_ADLSGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutomationWebhook')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecuteWebhook",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://cd08f1ae-eaa6-4202-991f-5a63f633838a.webhook.jpe.azure-automation.net/webhooks?token=YFcERaCZ6urZCjLJ4xvxKK7KiXFgCyucXgCyqCQhek4%3d",
							"connectVia": {
								"referenceName": "SHIR-taizawa2",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "ExecuteWebhook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 30
						}
					},
					{
						"name": "GetJobStatus",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://management.azure.com/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-taizawa001/providers/Microsoft.Automation/automationAccounts/AutomationTaizawaTest/jobs/',activity('ExecuteWebhook').output.JobIds[0] ,'?api-version=2019-06-01')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "SHIR-taizawa2",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetJobStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetJobStatus').output.properties.status, 'Completed')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Fail1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "error",
										"errorCode": "error"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob to Dynamics365')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Blob to Dynamics365",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "customerid@EntityReference",
										"value": {
											"value": "account",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DynamicsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "受注ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "salesorderid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "顧客",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customerid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "customerid@EntityReference"
										},
										"sink": {
											"name": "customerid@EntityReference"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelForDynamics365",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DynamicsEntity365",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ExcelForDynamics365')]",
				"[concat(variables('factoryId'), '/datasets/DynamicsEntity365')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_0c2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_0c2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "input//"
							},
							{
								"name": "Destination",
								"value": "output//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_0c2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_0c2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_0c2')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_0c2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_0sv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_0sv",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "input//"
							},
							{
								"name": "Destination",
								"value": "output//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_0sv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_0sv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_0sv')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_0sv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_64o')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_64o",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "input//"
							},
							{
								"name": "Destination",
								"value": "output//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_64o",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_64o",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_64o')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_64o')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_ja0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ja0",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "excelinput//"
							},
							{
								"name": "Destination",
								"value": "exceloutput//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "*",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_ja0",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_ja0",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_ja0')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_ja0')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_lsz')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_lsz",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "input//"
							},
							{
								"name": "Destination",
								"value": "/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "Test.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 1
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_lsz",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_lsz",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_lsz')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_lsz')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_vk4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_vk4",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "input//"
							},
							{
								"name": "Destination",
								"value": "output//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_vk4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_vk4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_vk4')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_vk4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataflow_Dataverse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataverse",
								"type": "DataFlowReference",
								"parameters": {
									"test": "{顧客}"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Dataverse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Decompress7z')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WebHookDecompress7z",
						"type": "WebHook",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"url": "https://cd08f1ae-eaa6-4202-991f-5a63f633838a.webhook.jpe.azure-automation.net/webhooks?token=FGPXKa4kNLgsh0%2ffs0DjSwXjiXKmf9j4P80GoQYG%2bmw%3d",
							"method": "POST",
							"headers": {},
							"body": {},
							"timeout": "00:10:00",
							"reportStatusOnCallBack": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelToExcel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExcelToExcel",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Binary1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLSGen2Binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:44:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary1')]",
				"[concat(variables('factoryId'), '/datasets/ADLSGen2Binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RenameTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@pipeline().parameters.p2",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Binary2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Binary3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"p1": {
						"type": "string"
					},
					"p2": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:44:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary2')]",
				"[concat(variables('factoryId'), '/datasets/Binary3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rest_Copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Rest_Copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "7zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "7zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/7zip')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SuspendTest01')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "7zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "7zip_ADLSGen2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 120
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 120
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "7zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "7zip_ADLSGen2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-07-27T07:01:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/7zip')]",
				"[concat(variables('factoryId'), '/datasets/7zip_ADLSGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SuspendTest2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SuspendTest01",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "7z_Copy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Execute Pipeline2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 120
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-07-27T07:15:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SuspendTest01')]",
				"[concat(variables('factoryId'), '/pipelines/7z_Copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TriggerTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://test",
							"method": "GET",
							"headers": {
								"filePath": {
									"value": "@pipeline().parameters.p1",
									"type": "Expression"
								},
								"fileName": {
									"value": "@pipeline().parameters.p2",
									"type": "Expression"
								},
								"startTime": {
									"value": "@pipeline().parameters.p3",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"p1": {
						"type": "string"
					},
					"p2": {
						"type": "string"
					},
					"p3": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Unzip7z')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WebHookUnzip7z",
						"type": "WebHook",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"url": "https://cd08f1ae-eaa6-4202-991f-5a63f633838a.webhook.jpe.azure-automation.net/webhooks?token=d9B%2bxq4%2f8VVcLQ8j2%2fglH8EK9pksIhdi7OnB0J0nd7E%3d",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@json(\n  concat(\n    '{\"connectionName\":\"',\n    variables('varConnectionName'),\n    '\",\"storageAccountKey\":\"',\n    variables('storageAccountKey'),\n    '\"}'\n  )\n)",
								"type": "Expression"
							},
							"timeout": "00:10:00",
							"reportStatusOnCallBack": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"varConnectionName": {
						"type": "String",
						"defaultValue": "AzureRunAsConnection"
					},
					"storageAccountKey": {
						"type": "String",
						"defaultValue": "https://cd08f1ae-eaa6-4202-991f-5a63f633838a.webhook.jpe.azure-automation.net/webhooks?token=d9B%2bxq4%2f8VVcLQ8j2%2fglH8EK9pksIhdi7OnB0J0nd7E%3d"
					}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/databricksTest001')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/adftutorial/mynotebook",
							"baseParameters": {
								"input": {
									"value": "@pipeline().parameters.name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks_LinkedService_001",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks_LinkedService_001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "7zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "7zip_ADLSGen2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T06:26:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/7zip')]",
				"[concat(variables('factoryId'), '/datasets/7zip_ADLSGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://lb.private.contoso.com",
							"connectVia": {
								"referenceName": "integrationRuntimeManagedVnet",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "7zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "7zip_ADLSGen2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T06:26:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimeManagedVnet')]",
				"[concat(variables('factoryId'), '/datasets/7zip')]",
				"[concat(variables('factoryId'), '/datasets/7zip_ADLSGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(dayOfMonth(convertFromUtc(utcNow(), 'Tokyo Standard Time')), 4)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"a": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-04T12:02:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 3600
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T06:31:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/powershellTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					},
					{
						"name": "Wait3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Wait2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					},
					{
						"name": "Wait4",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Wait3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T03:00:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/regExtractTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"inputCsv": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:44:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rerun-test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "rerun-test",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "in",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "rerun_test_in",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "rerun_test_out2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/rerun_test_in')]",
				"[concat(variables('factoryId'), '/datasets/rerun_test_out2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wait')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 3000
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-22T12:22:33Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/2206030060000373_in')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CRM_Contact_20220325.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "IsDeleted",
						"type": "String"
					},
					{
						"name": "MasterRecordId",
						"type": "String"
					},
					{
						"name": "AccountId",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "Salutation",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "OtherStreet",
						"type": "String"
					},
					{
						"name": "OtherCity",
						"type": "String"
					},
					{
						"name": "OtherState",
						"type": "String"
					},
					{
						"name": "OtherPostalCode",
						"type": "String"
					},
					{
						"name": "OtherCountry",
						"type": "String"
					},
					{
						"name": "OtherLatitude",
						"type": "String"
					},
					{
						"name": "OtherLongitude",
						"type": "String"
					},
					{
						"name": "OtherGeocodeAccuracy",
						"type": "String"
					},
					{
						"name": "MailingStreet",
						"type": "String"
					},
					{
						"name": "MailingCity",
						"type": "String"
					},
					{
						"name": "MailingState",
						"type": "String"
					},
					{
						"name": "MailingPostalCode",
						"type": "String"
					},
					{
						"name": "MailingCountry",
						"type": "String"
					},
					{
						"name": "MailingLatitude",
						"type": "String"
					},
					{
						"name": "MailingLongitude",
						"type": "String"
					},
					{
						"name": "MailingGeocodeAccuracy",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "Fax",
						"type": "String"
					},
					{
						"name": "MobilePhone",
						"type": "String"
					},
					{
						"name": "HomePhone",
						"type": "String"
					},
					{
						"name": "OtherPhone",
						"type": "String"
					},
					{
						"name": "AssistantPhone",
						"type": "String"
					},
					{
						"name": "ReportsToId",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "Department",
						"type": "String"
					},
					{
						"name": "AssistantName",
						"type": "String"
					},
					{
						"name": "LeadSource",
						"type": "String"
					},
					{
						"name": "Birthdate",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "CurrencyIsoCode",
						"type": "String"
					},
					{
						"name": "OwnerId",
						"type": "String"
					},
					{
						"name": "HasOptedOutOfEmail",
						"type": "String"
					},
					{
						"name": "HasOptedOutOfFax",
						"type": "String"
					},
					{
						"name": "DoNotCall",
						"type": "String"
					},
					{
						"name": "CreatedDate",
						"type": "String"
					},
					{
						"name": "CreatedById",
						"type": "String"
					},
					{
						"name": "LastModifiedDate",
						"type": "String"
					},
					{
						"name": "LastModifiedById",
						"type": "String"
					},
					{
						"name": "SystemModstamp",
						"type": "String"
					},
					{
						"name": "LastActivityDate",
						"type": "String"
					},
					{
						"name": "LastCURequestDate",
						"type": "String"
					},
					{
						"name": "LastCUUpdateDate",
						"type": "String"
					},
					{
						"name": "LastViewedDate",
						"type": "String"
					},
					{
						"name": "LastReferencedDate",
						"type": "String"
					},
					{
						"name": "EmailBouncedReason",
						"type": "String"
					},
					{
						"name": "EmailBouncedDate",
						"type": "String"
					},
					{
						"name": "IsEmailBounced",
						"type": "String"
					},
					{
						"name": "PhotoUrl",
						"type": "String"
					},
					{
						"name": "Jigsaw",
						"type": "String"
					},
					{
						"name": "JigsawContactId",
						"type": "String"
					},
					{
						"name": "IndividualId",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_PersonId__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_SOC__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__Sansan_CompanyId__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__Sansan_CompanyInfo__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__Sansan_PersonId__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__Sansan_PersonInfo__c",
						"type": "String"
					},
					{
						"name": "MyDepartmentFlag__c",
						"type": "String"
					},
					{
						"name": "ABC_Evaluation__c",
						"type": "String"
					},
					{
						"name": "ACCOUNT_NAME__c",
						"type": "String"
					},
					{
						"name": "AREA__c",
						"type": "String"
					},
					{
						"name": "Address__c",
						"type": "String"
					},
					{
						"name": "Building__c",
						"type": "String"
					},
					{
						"name": "BusinessLine__c",
						"type": "String"
					},
					{
						"name": "ChangeDate__c",
						"type": "String"
					},
					{
						"name": "City__c",
						"type": "String"
					},
					{
						"name": "Comment__c",
						"type": "String"
					},
					{
						"name": "DeletedFlg__c",
						"type": "String"
					},
					{
						"name": "MyDivisionFlag__c",
						"type": "String"
					},
					{
						"name": "FirstName_Kana__c",
						"type": "String"
					},
					{
						"name": "HasOptedOutOfEmail__c",
						"type": "String"
					},
					{
						"name": "MyOperationsDepartmentFlag__c",
						"type": "String"
					},
					{
						"name": "LastName_Kana__c",
						"type": "String"
					},
					{
						"name": "MailMagazineFlg__c",
						"type": "String"
					},
					{
						"name": "MailingList__c",
						"type": "String"
					},
					{
						"name": "MobilePhone__c",
						"type": "String"
					},
					{
						"name": "ON_Evaluation__c",
						"type": "String"
					},
					{
						"name": "OldSystemSeqNo__c",
						"type": "String"
					},
					{
						"name": "PRG_Evaluation__c",
						"type": "String"
					},
					{
						"name": "PostalCode__c",
						"type": "String"
					},
					{
						"name": "Prefectures__c",
						"type": "String"
					},
					{
						"name": "RoleLevel__c",
						"type": "String"
					},
					{
						"name": "SeminarFlg__c",
						"type": "String"
					},
					{
						"name": "saveFlg__c",
						"type": "String"
					},
					{
						"name": "ABC_Evaluation_Remark__c",
						"type": "String"
					},
					{
						"name": "ABC__c",
						"type": "String"
					},
					{
						"name": "ON__c",
						"type": "String"
					},
					{
						"name": "PRG__c",
						"type": "String"
					},
					{
						"name": "MySectionFlag__c",
						"type": "String"
					},
					{
						"name": "pi__Needs_Score_Synced__c",
						"type": "String"
					},
					{
						"name": "pi__Pardot_Last_Scored_At__c",
						"type": "String"
					},
					{
						"name": "pi__campaign__c",
						"type": "String"
					},
					{
						"name": "pi__comments__c",
						"type": "String"
					},
					{
						"name": "pi__conversion_date__c",
						"type": "String"
					},
					{
						"name": "pi__conversion_object_name__c",
						"type": "String"
					},
					{
						"name": "pi__conversion_object_type__c",
						"type": "String"
					},
					{
						"name": "pi__created_date__c",
						"type": "String"
					},
					{
						"name": "pi__first_activity__c",
						"type": "String"
					},
					{
						"name": "pi__first_search_term__c",
						"type": "String"
					},
					{
						"name": "pi__first_search_type__c",
						"type": "String"
					},
					{
						"name": "pi__first_touch_url__c",
						"type": "String"
					},
					{
						"name": "pi__grade__c",
						"type": "String"
					},
					{
						"name": "pi__last_activity__c",
						"type": "String"
					},
					{
						"name": "pi__notes__c",
						"type": "String"
					},
					{
						"name": "pi__pardot_hard_bounced__c",
						"type": "String"
					},
					{
						"name": "pi__score__c",
						"type": "String"
					},
					{
						"name": "pi__url__c",
						"type": "String"
					},
					{
						"name": "pi__utm_campaign__c",
						"type": "String"
					},
					{
						"name": "pi__utm_content__c",
						"type": "String"
					},
					{
						"name": "pi__utm_medium__c",
						"type": "String"
					},
					{
						"name": "pi__utm_source__c",
						"type": "String"
					},
					{
						"name": "pi__utm_term__c",
						"type": "String"
					},
					{
						"name": "DataSource__c",
						"type": "String"
					},
					{
						"name": "EventDate__c",
						"type": "String"
					},
					{
						"name": "InboundInformation1__c",
						"type": "String"
					},
					{
						"name": "InboundInformation2__c",
						"type": "String"
					},
					{
						"name": "InboundInformation3__c",
						"type": "String"
					},
					{
						"name": "InboundOccurrenceDate__c",
						"type": "String"
					},
					{
						"name": "JoinOrNotJoin__c",
						"type": "String"
					},
					{
						"name": "LeadOccurrenceDate__c",
						"type": "String"
					},
					{
						"name": "LeadTypeName__c",
						"type": "String"
					},
					{
						"name": "MailDeliveryPermissionFlag__c",
						"type": "String"
					},
					{
						"name": "MailDeliveryPermissionGetDate__c",
						"type": "String"
					},
					{
						"name": "MailDeliveryPermissionGetSource__c",
						"type": "String"
					},
					{
						"name": "SeminarID__c",
						"type": "String"
					},
					{
						"name": "SeminorName__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_AutomaticKey__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_LocationTransfeProcessingNum__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_LocationTransferErrMsg__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_LocationTransferFlg__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_LocationTransferNextProcessingDate__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_PersonId_FK__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_SLC_Difference__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_SLC__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_SOC_FK__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__ConversionTargetFlg__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__Sansan_CompanyId_FK__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__Sansan_PersonId_FK__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__Tags__c",
						"type": "String"
					},
					{
						"name": "sci_person_address_city__c",
						"type": "String"
					},
					{
						"name": "sci_person_address_countryCode__c",
						"type": "String"
					},
					{
						"name": "sci_person_address_postalCode__c",
						"type": "String"
					},
					{
						"name": "sci_person_address_state__c",
						"type": "String"
					},
					{
						"name": "sci_person_address_street__c",
						"type": "String"
					},
					{
						"name": "sci_person_department__c",
						"type": "String"
					},
					{
						"name": "sci_person_email__c",
						"type": "String"
					},
					{
						"name": "sci_person_fax__c",
						"type": "String"
					},
					{
						"name": "sci_person_firstName__c",
						"type": "String"
					},
					{
						"name": "sci_person_lastName__c",
						"type": "String"
					},
					{
						"name": "sci_person_mobilePhone__c",
						"type": "String"
					},
					{
						"name": "sci_person_organizationName__c",
						"type": "String"
					},
					{
						"name": "sci_person_phone__c",
						"type": "String"
					},
					{
						"name": "sci_person_position__c",
						"type": "String"
					},
					{
						"name": "sci_sansan_organization_keywords__c",
						"type": "String"
					},
					{
						"name": "sci_sansan_person_occupations__c",
						"type": "String"
					},
					{
						"name": "sci_sansan_person_personId__c",
						"type": "String"
					},
					{
						"name": "sci_sansan_person_positionRank__c",
						"type": "String"
					},
					{
						"name": "sci_sansan_person_tags__c",
						"type": "String"
					},
					{
						"name": "ExcludedFromSendingMailCheckStatus__c",
						"type": "String"
					},
					{
						"name": "ExcludedFromSendingMailCheck__c",
						"type": "String"
					},
					{
						"name": "InvalidOwnerFlag__c",
						"type": "String"
					},
					{
						"name": "KyoikuPersonFlag__c",
						"type": "String"
					},
					{
						"name": "CompanyName__c",
						"type": "String"
					},
					{
						"name": "Remarks__c",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2206030060000373_out')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "CONTENT",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/7zip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "7zip"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/7zip_ADLSGen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "7zip"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSGen2Binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "exceloutput"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSGen2_csv_in001')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2_datalakestoragetaizawa_MSI",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filePath": {
						"type": "string",
						"defaultValue": "ETL/AD01/work"
					},
					"fileName": {
						"type": "string",
						"defaultValue": "MKI_DMS_RECOVERY"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						},
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2_datalakestoragetaizawa_MSI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSGen2_csv_out001')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2_datalakestoragetaizawa_MSI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2_datalakestoragetaizawa_MSI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage5",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dummy",
						"container": "renametestinput"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage6",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "outputFile.docx",
						"container": "renametestoutput"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage6')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_0c2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "test",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_0sv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_64o')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_ja0')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "hoge.docx",
						"fileSystem": "exceloutput"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_lsz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureFileStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFileStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_vk4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DynamicsEntity365')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dynamics365",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DynamicsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "salesorder"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dynamics365')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DynamicsEntity365_account')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dynamics365",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DynamicsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "account"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dynamics365')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DynamicsEntity365_contact')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dynamics365",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DynamicsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "contact"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dynamics365')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelForDynamics365')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "受注",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "20220523_001.xlsx",
						"container": "dynamics365"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "受注ID",
						"type": "String"
					},
					{
						"name": "名前",
						"type": "String"
					},
					{
						"name": "ステータス",
						"type": "String"
					},
					{
						"name": "合計金額",
						"type": "String"
					},
					{
						"name": "顧客",
						"type": "String"
					},
					{
						"name": "電子メール (顧客) (取引先担当者 )",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncLoadTestSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "incLoadTaizawa001",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "varchar"
					},
					{
						"name": "last_name",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "city",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "test_customers_sink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/incLoadTaizawa001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncLoadTestSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "incLoadTaizawa001",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "varchar"
					},
					{
						"name": "last_name",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "city",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "test_customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/incLoadTaizawa001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoviesCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "movies.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movieId",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Id",
						"type": "UTF8"
					},
					{
						"name": "IsDeleted",
						"type": "UTF8"
					},
					{
						"name": "MasterRecordId",
						"type": "UTF8"
					},
					{
						"name": "AccountId",
						"type": "UTF8"
					},
					{
						"name": "LastName",
						"type": "UTF8"
					},
					{
						"name": "FirstName",
						"type": "UTF8"
					},
					{
						"name": "Salutation",
						"type": "UTF8"
					},
					{
						"name": "Name",
						"type": "UTF8"
					},
					{
						"name": "OtherStreet",
						"type": "UTF8"
					},
					{
						"name": "OtherCity",
						"type": "UTF8"
					},
					{
						"name": "OtherState",
						"type": "UTF8"
					},
					{
						"name": "OtherPostalCode",
						"type": "UTF8"
					},
					{
						"name": "OtherCountry",
						"type": "UTF8"
					},
					{
						"name": "OtherLatitude",
						"type": "UTF8"
					},
					{
						"name": "OtherLongitude",
						"type": "UTF8"
					},
					{
						"name": "OtherGeocodeAccuracy",
						"type": "UTF8"
					},
					{
						"name": "MailingStreet",
						"type": "UTF8"
					},
					{
						"name": "MailingCity",
						"type": "UTF8"
					},
					{
						"name": "MailingState",
						"type": "UTF8"
					},
					{
						"name": "MailingPostalCode",
						"type": "UTF8"
					},
					{
						"name": "MailingCountry",
						"type": "UTF8"
					},
					{
						"name": "MailingLatitude",
						"type": "UTF8"
					},
					{
						"name": "MailingLongitude",
						"type": "UTF8"
					},
					{
						"name": "MailingGeocodeAccuracy",
						"type": "UTF8"
					},
					{
						"name": "Phone",
						"type": "UTF8"
					},
					{
						"name": "Fax",
						"type": "UTF8"
					},
					{
						"name": "MobilePhone",
						"type": "UTF8"
					},
					{
						"name": "HomePhone",
						"type": "UTF8"
					},
					{
						"name": "OtherPhone",
						"type": "UTF8"
					},
					{
						"name": "AssistantPhone",
						"type": "UTF8"
					},
					{
						"name": "ReportsToId",
						"type": "UTF8"
					},
					{
						"name": "Email",
						"type": "UTF8"
					},
					{
						"name": "Title",
						"type": "UTF8"
					},
					{
						"name": "Department",
						"type": "UTF8"
					},
					{
						"name": "AssistantName",
						"type": "UTF8"
					},
					{
						"name": "LeadSource",
						"type": "UTF8"
					},
					{
						"name": "Birthdate",
						"type": "UTF8"
					},
					{
						"name": "Description",
						"type": "UTF8"
					},
					{
						"name": "CurrencyIsoCode",
						"type": "UTF8"
					},
					{
						"name": "OwnerId",
						"type": "UTF8"
					},
					{
						"name": "HasOptedOutOfEmail",
						"type": "UTF8"
					},
					{
						"name": "HasOptedOutOfFax",
						"type": "UTF8"
					},
					{
						"name": "DoNotCall",
						"type": "UTF8"
					},
					{
						"name": "CreatedDate",
						"type": "UTF8"
					},
					{
						"name": "CreatedById",
						"type": "UTF8"
					},
					{
						"name": "LastModifiedDate",
						"type": "UTF8"
					},
					{
						"name": "LastModifiedById",
						"type": "UTF8"
					},
					{
						"name": "SystemModstamp",
						"type": "UTF8"
					},
					{
						"name": "LastActivityDate",
						"type": "UTF8"
					},
					{
						"name": "LastCURequestDate",
						"type": "UTF8"
					},
					{
						"name": "LastCUUpdateDate",
						"type": "UTF8"
					},
					{
						"name": "LastViewedDate",
						"type": "UTF8"
					},
					{
						"name": "LastReferencedDate",
						"type": "UTF8"
					},
					{
						"name": "EmailBouncedReason",
						"type": "UTF8"
					},
					{
						"name": "EmailBouncedDate",
						"type": "UTF8"
					},
					{
						"name": "IsEmailBounced",
						"type": "UTF8"
					},
					{
						"name": "PhotoUrl",
						"type": "UTF8"
					},
					{
						"name": "Jigsaw",
						"type": "UTF8"
					},
					{
						"name": "JigsawContactId",
						"type": "UTF8"
					},
					{
						"name": "IndividualId",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_PersonId__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_SOC__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__Sansan_CompanyId__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__Sansan_CompanyInfo__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__Sansan_PersonId__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__Sansan_PersonInfo__c",
						"type": "UTF8"
					},
					{
						"name": "MyDepartmentFlag__c",
						"type": "UTF8"
					},
					{
						"name": "ABC_Evaluation__c",
						"type": "UTF8"
					},
					{
						"name": "ACCOUNT_NAME__c",
						"type": "UTF8"
					},
					{
						"name": "AREA__c",
						"type": "UTF8"
					},
					{
						"name": "Address__c",
						"type": "UTF8"
					},
					{
						"name": "Building__c",
						"type": "UTF8"
					},
					{
						"name": "BusinessLine__c",
						"type": "UTF8"
					},
					{
						"name": "ChangeDate__c",
						"type": "UTF8"
					},
					{
						"name": "City__c",
						"type": "UTF8"
					},
					{
						"name": "Comment__c",
						"type": "UTF8"
					},
					{
						"name": "DeletedFlg__c",
						"type": "UTF8"
					},
					{
						"name": "MyDivisionFlag__c",
						"type": "UTF8"
					},
					{
						"name": "FirstName_Kana__c",
						"type": "UTF8"
					},
					{
						"name": "HasOptedOutOfEmail__c",
						"type": "UTF8"
					},
					{
						"name": "MyOperationsDepartmentFlag__c",
						"type": "UTF8"
					},
					{
						"name": "LastName_Kana__c",
						"type": "UTF8"
					},
					{
						"name": "MailMagazineFlg__c",
						"type": "UTF8"
					},
					{
						"name": "MailingList__c",
						"type": "UTF8"
					},
					{
						"name": "MobilePhone__c",
						"type": "UTF8"
					},
					{
						"name": "ON_Evaluation__c",
						"type": "UTF8"
					},
					{
						"name": "OldSystemSeqNo__c",
						"type": "UTF8"
					},
					{
						"name": "PRG_Evaluation__c",
						"type": "UTF8"
					},
					{
						"name": "PostalCode__c",
						"type": "UTF8"
					},
					{
						"name": "Prefectures__c",
						"type": "UTF8"
					},
					{
						"name": "RoleLevel__c",
						"type": "UTF8"
					},
					{
						"name": "SeminarFlg__c",
						"type": "UTF8"
					},
					{
						"name": "saveFlg__c",
						"type": "UTF8"
					},
					{
						"name": "ABC_Evaluation_Remark__c",
						"type": "UTF8"
					},
					{
						"name": "ABC__c",
						"type": "UTF8"
					},
					{
						"name": "ON__c",
						"type": "UTF8"
					},
					{
						"name": "PRG__c",
						"type": "UTF8"
					},
					{
						"name": "MySectionFlag__c",
						"type": "UTF8"
					},
					{
						"name": "pi__Needs_Score_Synced__c",
						"type": "UTF8"
					},
					{
						"name": "pi__Pardot_Last_Scored_At__c",
						"type": "UTF8"
					},
					{
						"name": "pi__campaign__c",
						"type": "UTF8"
					},
					{
						"name": "pi__comments__c",
						"type": "UTF8"
					},
					{
						"name": "pi__conversion_date__c",
						"type": "UTF8"
					},
					{
						"name": "pi__conversion_object_name__c",
						"type": "UTF8"
					},
					{
						"name": "pi__conversion_object_type__c",
						"type": "UTF8"
					},
					{
						"name": "pi__created_date__c",
						"type": "UTF8"
					},
					{
						"name": "pi__first_activity__c",
						"type": "UTF8"
					},
					{
						"name": "pi__first_search_term__c",
						"type": "UTF8"
					},
					{
						"name": "pi__first_search_type__c",
						"type": "UTF8"
					},
					{
						"name": "pi__first_touch_url__c",
						"type": "UTF8"
					},
					{
						"name": "pi__grade__c",
						"type": "UTF8"
					},
					{
						"name": "pi__last_activity__c",
						"type": "UTF8"
					},
					{
						"name": "pi__notes__c",
						"type": "UTF8"
					},
					{
						"name": "pi__pardot_hard_bounced__c",
						"type": "UTF8"
					},
					{
						"name": "pi__score__c",
						"type": "UTF8"
					},
					{
						"name": "pi__url__c",
						"type": "UTF8"
					},
					{
						"name": "pi__utm_campaign__c",
						"type": "UTF8"
					},
					{
						"name": "pi__utm_content__c",
						"type": "UTF8"
					},
					{
						"name": "pi__utm_medium__c",
						"type": "UTF8"
					},
					{
						"name": "pi__utm_source__c",
						"type": "UTF8"
					},
					{
						"name": "pi__utm_term__c",
						"type": "UTF8"
					},
					{
						"name": "DataSource__c",
						"type": "UTF8"
					},
					{
						"name": "EventDate__c",
						"type": "UTF8"
					},
					{
						"name": "InboundInformation1__c",
						"type": "UTF8"
					},
					{
						"name": "InboundInformation2__c",
						"type": "UTF8"
					},
					{
						"name": "InboundInformation3__c",
						"type": "UTF8"
					},
					{
						"name": "InboundOccurrenceDate__c",
						"type": "UTF8"
					},
					{
						"name": "JoinOrNotJoin__c",
						"type": "UTF8"
					},
					{
						"name": "LeadOccurrenceDate__c",
						"type": "UTF8"
					},
					{
						"name": "LeadTypeName__c",
						"type": "UTF8"
					},
					{
						"name": "MailDeliveryPermissionFlag__c",
						"type": "UTF8"
					},
					{
						"name": "MailDeliveryPermissionGetDate__c",
						"type": "UTF8"
					},
					{
						"name": "MailDeliveryPermissionGetSource__c",
						"type": "UTF8"
					},
					{
						"name": "SeminarID__c",
						"type": "UTF8"
					},
					{
						"name": "SeminorName__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_AutomaticKey__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_LocationTransfeProcessingNum__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_LocationTransferErrMsg__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_LocationTransferFlg__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_LocationTransferNextProcessingDate__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_PersonId_FK__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_SLC_Difference__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_SLC__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_SOC_FK__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__ConversionTargetFlg__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__Sansan_CompanyId_FK__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__Sansan_PersonId_FK__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__Tags__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_address_city__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_address_countryCode__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_address_postalCode__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_address_state__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_address_street__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_department__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_email__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_fax__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_firstName__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_lastName__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_mobilePhone__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_organizationName__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_phone__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_position__c",
						"type": "UTF8"
					},
					{
						"name": "sci_sansan_organization_keywords__c",
						"type": "UTF8"
					},
					{
						"name": "sci_sansan_person_occupations__c",
						"type": "UTF8"
					},
					{
						"name": "sci_sansan_person_personId__c",
						"type": "UTF8"
					},
					{
						"name": "sci_sansan_person_positionRank__c",
						"type": "UTF8"
					},
					{
						"name": "sci_sansan_person_tags__c",
						"type": "UTF8"
					},
					{
						"name": "ExcludedFromSendingMailCheckStatus__c",
						"type": "UTF8"
					},
					{
						"name": "ExcludedFromSendingMailCheck__c",
						"type": "UTF8"
					},
					{
						"name": "InvalidOwnerFlag__c",
						"type": "UTF8"
					},
					{
						"name": "KyoikuPersonFlag__c",
						"type": "UTF8"
					},
					{
						"name": "CompanyName__c",
						"type": "UTF8"
					},
					{
						"name": "Remarks__c",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_0c2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "test",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_0sv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_64o')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "CONTENT",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_cdf')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ja0')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "*.docx",
						"container": "excelinput"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_lsz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Test.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_vk4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StorageAcountBinary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "excelinput"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/regExtractTest_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "azureinfo.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "CONTENT",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/regExtractTest_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "MoviesCount",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rerun_test_in')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2_datalakestoragetaizawa_MSI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "in",
						"fileSystem": "rerun-test"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "CONTENT",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2_datalakestoragetaizawa_MSI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rerun_test_out')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2_datalakestoragetaizawa_MSI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "out",
						"fileSystem": "rerun-test"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2_datalakestoragetaizawa_MSI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rerun_test_out2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2_datalakestoragetaizawa_MSI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('out/', utcnow('yyyyMMddHHmmss'))",
							"type": "Expression"
						},
						"fileSystem": "rerun-test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2_datalakestoragetaizawa_MSI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSGen2_datalakestoragetaizawa_MSI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSGen2_datalakestoragetaizawa_MSI_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('AzureBlobStorage1_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage4')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage4_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage5')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage5_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage6')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage6_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage7')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage7_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks_LinkedService_001')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Databricksのテスト",
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-314905698721317.17.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_LinkedService_001_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "2",
					"newClusterVersion": "10.3.x-scala2.12",
					"newClusterInitScripts": [],
					"clusterOption": "Fixed"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFileStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureFileStorage1_connectionString')]",
					"fileShare": "filesharetest01",
					"snapshot": "2022-06-21T00:00:00.471Z"
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('AzurePostgreSql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics3_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntimeManagedVnet",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimeManagedVnet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDb1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDb1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbApi1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDbMongoDbApi",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbMongoDbApi1_connectionString')]",
					"database": "[parameters('CosmosDbMongoDbApi1_properties_typeProperties_database')]",
					"isServerVersionAbove32": true
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dynamics365')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Dynamics",
				"typeProperties": {
					"deploymentType": "Online",
					"serviceUri": "https://tokaneko-adf.crm7.dynamics.com/",
					"authenticationType": "Office365",
					"username": "[parameters('Dynamics365_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Dynamics365_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServer1_properties_typeProperties_host')]",
					"userId": "[parameters('FileServer1_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rest_storageacctaizawa')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Rest_storageacctaizawa_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('Salesforce1_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('Salesforce1_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Salesforce1_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('Salesforce1_securityToken')]"
					},
					"apiVersion": "54.0",
					"extendedProperties": "ProxyHost=localhost;ProxyPort=3128"
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesforceServiceCloud1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"aaa": {
						"type": "string",
						"defaultValue": "bbb"
					}
				},
				"annotations": [],
				"type": "SalesforceServiceCloud",
				"typeProperties": {
					"environmentUrl": "[parameters('SalesforceServiceCloud1_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('SalesforceServiceCloud1_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SalesforceServiceCloud1_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('SalesforceServiceCloud1_securityToken')]"
					},
					"apiVersion": "52.0"
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapTable1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "てすと",
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('SapTable1_properties_typeProperties_clientId')]",
					"language": "",
					"sncMode": false,
					"userName": "[parameters('SapTable1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SapTable1_password')]"
					},
					"server": "[parameters('SapTable1_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SapTable1_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sftp1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('Sftp1_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": false,
					"hostKeyFingerprint": "[parameters('Sftp1_properties_typeProperties_hostKeyFingerprint')]",
					"authenticationType": "Basic",
					"userName": "[parameters('Sftp1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Sftp1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SharePointOnlineList_admin2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SharePointOnlineList",
				"typeProperties": {
					"siteUrl": "https://m365x78964420.sharepoint.com/sites/Test/",
					"tenantId": "258711a2-7ca6-44f7-b8c8-2e5fb1833f7c",
					"servicePrincipalId": "[parameters('SharePointOnlineList_admin2_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('SharePointOnlineList_admin2_servicePrincipalKey')]"
					}
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SharePointOnlineList_owner02')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SharePointOnlineList",
				"typeProperties": {
					"siteUrl": "https://m365x78964420.sharepoint.com/sites/Test/",
					"tenantId": "258711a2-7ca6-44f7-b8c8-2e5fb1833f7c",
					"servicePrincipalId": "[parameters('SharePointOnlineList_owner02_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('SharePointOnlineList_owner02_servicePrincipalKey')]"
					}
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incLoadTaizawa001')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('incLoadTaizawa001_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('test_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/0805Test01_1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pipeline4",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2022-08-05T02:16:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/0805Test01_2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pipeline4",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2022-08-05T02:18:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 2,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/0825Test_01')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pipeline4",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2022-08-25T07:30:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "SelfDependencyTumblingWindowTriggerReference",
							"offset": "-0.15:00:00"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/0825Test_02')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "wait",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2022-08-25T08:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "SelfDependencyTumblingWindowTriggerReference",
							"offset": "-0.00:15:00"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/wait')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobEventsTrigger001')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TriggerTest",
							"type": "PipelineReference"
						},
						"parameters": {
							"p1": "[parameters('BlobEventsTrigger001_properties_TriggerTest_parameters_p1')]",
							"p2": "[parameters('BlobEventsTrigger001_properties_TriggerTest_parameters_p2')]",
							"p3": "[parameters('BlobEventsTrigger001_properties_TriggerTest_parameters_p3')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/root/blobs/202206",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('BlobEventsTrigger001_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TriggerTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SchduleTrigger001')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TriggerTest",
							"type": "PipelineReference"
						},
						"parameters": {
							"p1": "[parameters('SchduleTrigger001_properties_TriggerTest_parameters_p1')]",
							"p2": "[parameters('SchduleTrigger001_properties_TriggerTest_parameters_p2')]",
							"p3": "[parameters('SchduleTrigger001_properties_TriggerTest_parameters_p3')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 20,
						"startTime": "2022-06-07T05:30:00Z",
						"endTime": "2022-06-07T06:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TriggerTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Schdule_TriggerTest003')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TriggerTest",
							"type": "PipelineReference"
						},
						"parameters": {
							"p1": "[parameters('Schdule_TriggerTest003_properties_TriggerTest_parameters_p1')]",
							"p2": "[parameters('Schdule_TriggerTest003_properties_TriggerTest_parameters_p2')]",
							"p3": "[parameters('Schdule_TriggerTest003_properties_TriggerTest_parameters_p3')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "pipeline1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2022-07-15T04:02:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								40
							],
							"hours": [
								10
							],
							"monthDays": [
								-31,
								-30,
								-29,
								-27,
								-26,
								-25,
								-24,
								-23,
								-22,
								-21,
								-20,
								-19,
								-18,
								-17,
								-16,
								-15,
								-14,
								-13,
								-12,
								-11,
								-10,
								-9,
								-8,
								-7,
								-6,
								-5,
								-4,
								-3,
								-2,
								1,
								2,
								3,
								4
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TriggerTest')]",
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ScheduleTriggerTest')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2022-07-01T00:58:00",
						"timeZone": "Tokyo Standard Time",
						"schedule": {
							"monthDays": [
								1
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Schedule_TriggerTest002')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "マイナス値のテスト",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TriggerTest",
							"type": "PipelineReference"
						},
						"parameters": {
							"p1": "[parameters('Schedule_TriggerTest002_properties_TriggerTest_parameters_p1')]",
							"p2": "[parameters('Schedule_TriggerTest002_properties_TriggerTest_parameters_p2')]",
							"p3": "[parameters('Schedule_TriggerTest002_properties_TriggerTest_parameters_p3')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2022-07-15T03:58:00",
						"endTime": "2022-07-31T23:58:00",
						"timeZone": "Tokyo Standard Time",
						"schedule": {
							"minutes": [
								5
							],
							"hours": [
								13
							],
							"monthDays": [
								-17,
								1,
								-1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TriggerTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StorageEventTest')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TriggerTest",
							"type": "PipelineReference"
						},
						"parameters": {
							"p1": "[parameters('StorageEventTest_properties_TriggerTest_parameters_p1')]",
							"p2": "[parameters('StorageEventTest_properties_TriggerTest_parameters_p2')]",
							"p3": "[parameters('StorageEventTest_properties_TriggerTest_parameters_p3')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/root/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('StorageEventTest_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TriggerTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TriggerA')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pipeline1",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 168,
					"startTime": "2022-07-23T15:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TriggerB')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pipeline1",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 168,
					"startTime": "2022-07-23T15:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "TriggerA",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]",
				"[concat(variables('factoryId'), '/triggers/TriggerA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TriggerTest",
							"type": "PipelineReference"
						},
						"parameters": {
							"p1": "[parameters('trigger2_properties_TriggerTest_parameters_p1')]",
							"p2": "[parameters('trigger2_properties_TriggerTest_parameters_p2')]",
							"p3": "[parameters('trigger2_properties_TriggerTest_parameters_p3')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/input/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger2_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TriggerTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger3')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "RenameTest",
							"type": "PipelineReference"
						},
						"parameters": {
							"p1": "[parameters('trigger3_properties_RenameTest_parameters_p1')]",
							"p2": "[parameters('trigger3_properties_RenameTest_parameters_p2')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/renametestinput/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger3_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/RenameTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger4')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "2206030060000373_CSV",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2022-06-29T06:30:00Z",
						"endTime": "2022-06-30T06:50:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/2206030060000373_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger5')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "7z_Copy",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2022-07-25T04:45:00Z",
					"endTime": "2022-07-28T00:35:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/7z_Copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger6')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "7z_Copy",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2022-07-25T04:45:00Z",
					"endTime": "2022-07-28T00:35:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "trigger5",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/7z_Copy')]",
				"[concat(variables('factoryId'), '/triggers/trigger5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger8')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "wait",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2022-08-22T12:15:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "SelfDependencyTumblingWindowTriggerReference",
							"offset": "-0.00:15:00"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/wait')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureintegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Japan East",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/JapanWest-AzureintegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR-taizawa1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR-taizawa2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Japan East",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntimeManagedVnet')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Japan East",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_2206270060000972')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DataFlowのソースで、完了後にファイルを移動するオプションの挙動を確認。",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLSGen2_csv_in001",
								"type": "DatasetReference"
							},
							"name": "ADLSGen2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ADLSGen2_csv_out001",
								"type": "DatasetReference"
							},
							"name": "ADLSGen2out"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     azureRootFolder as string ('ETL/AD01'),",
						"     ftpFileName as string ('MKI_DMS_RECOVERY')",
						"}",
						"source(output(",
						"          ID as short,",
						"          NAME as string,",
						"          CONTENT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     moveFiles: [(concatWS('/work/', $azureRootFolder, '')),(concatWS('/', $azureRootFolder, 'backup', toString(fromUTC(currentUTC(), 'Asia/Tokyo'),'yyyyMMddHHmmss'), $ftpFileName))]) ~> ADLSGen2",
						"ADLSGen2 derive(Test = ID) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['test.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ADLSGen2out"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLSGen2_csv_in001')]",
				"[concat(variables('factoryId'), '/datasets/ADLSGen2_csv_out001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataverse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ExcelForDynamics365",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DynamicsEntity365_account",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     test as string ({顧客})",
						"}",
						"source(output(",
						"          {受注ID} as string,",
						"          {名前} as string,",
						"          {ステータス} as string,",
						"          {合計金額} as string,",
						"          {顧客} as string,",
						"          {電子メール (顧客) (取引先担当者 )} as string,",
						"          Type as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(odata = iif(isNull({顧客}), toString(null()), concat('contacts/',{顧客})),",
						"          odata2 = iif(isNull({顧客}), toString(null()), concat(concat('/contacts(',{顧客}), ')'))) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          accountid = {受注ID},",
						"          {primarycontactid@odata.bind} = odata",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ExcelForDynamics365')]",
				"[concat(variables('factoryId'), '/datasets/DynamicsEntity365_account')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoviesCleanFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MoviesCsv",
								"type": "DatasetReference"
							},
							"name": "movies"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OutputCsv",
								"type": "DatasetReference"
							},
							"name": "MoviesClean"
						},
						{
							"dataset": {
								"referenceName": "OutputCsv",
								"type": "DatasetReference"
							},
							"name": "MoviesByYearSink"
						}
					],
					"transformations": [
						{
							"name": "YearExtraction"
						},
						{
							"name": "MoviesByYear"
						}
					],
					"scriptLines": [
						"source(output(",
						"          movieId as string,",
						"          title as string,",
						"          genres as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> movies",
						"movies derive(Year = toInteger(trim(right(title, 6), '()')),",
						"          title = toString(left(title, length(title)-6))) ~> YearExtraction",
						"YearExtraction aggregate(groupBy(Year),",
						"     MoviesCount = count(),",
						"     partitionBy('roundRobin', 2)) ~> MoviesByYear",
						"YearExtraction sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['movies-clean.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> MoviesClean",
						"MoviesByYear sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['movies-by-year.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> MoviesByYearSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MoviesCsv')]",
				"[concat(variables('factoryId'), '/datasets/OutputCsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "regExtractTest_input",
								"type": "DatasetReference"
							},
							"name": "inputCsv"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "regExtractTest_output",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as string,",
						"          NAME as string,",
						"          CONTENT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> inputCsv",
						"inputCsv derive(MAIL = regexExtract(CONTENT, '(\\\\d+)@mitsuichemicals.com', 1),",
						"          MAIL2 = regexExtract(CONTENT, '([0-9]+)@mitsuichemicals.com', 1),",
						"          {列1} = regexExtract(CONTENT, '(\\\\d+@mitsuichemicals.com)', 1),",
						"          {列2} = regexExtract(CONTENT, '([0-9]+@mitsuichemicals\\\\.com)', 1)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Year as string,",
						"          MoviesCount as string",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/regExtractTest_input')]",
				"[concat(variables('factoryId'), '/datasets/regExtractTest_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureFileStorage222')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureFileStorage222_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureFileStorage222_properties_groupId')]",
				"fqdns": "[parameters('AzureFileStorage222_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureFunction584')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureFunction584_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureFunction584_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureSynapseAnalytics284')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureSynapseAnalytics284_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureSynapseAnalytics284_properties_groupId')]",
				"fqdns": "[parameters('AzureSynapseAnalytics284_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/PrivateLinkService892')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('PrivateLinkService892_properties_privateLinkResourceId')]",
				"groupId": "[parameters('PrivateLinkService892_properties_groupId')]",
				"fqdns": "[parameters('PrivateLinkService892_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}