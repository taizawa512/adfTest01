{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "データ ファクトリ名",
			"defaultValue": "ADF-taizawa002"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "'AzureBlobStorage2' の 'connectionString' のセキュリティで保護された文字列"
		},
		"AzureBlobStorage3_connectionString": {
			"type": "secureString",
			"metadata": "'AzureBlobStorage3' の 'connectionString' のセキュリティで保護された文字列"
		},
		"AzureBlobStorage4_connectionString": {
			"type": "secureString",
			"metadata": "'AzureBlobStorage4' の 'connectionString' のセキュリティで保護された文字列"
		},
		"AzureBlobStorage5_connectionString": {
			"type": "secureString",
			"metadata": "'AzureBlobStorage5' の 'connectionString' のセキュリティで保護された文字列"
		},
		"AzureBlobStorage6_connectionString": {
			"type": "secureString",
			"metadata": "'AzureBlobStorage6' の 'connectionString' のセキュリティで保護された文字列"
		},
		"AzureBlobStorage7_connectionString": {
			"type": "secureString",
			"metadata": "'AzureBlobStorage7' の 'connectionString' のセキュリティで保護された文字列"
		},
		"AzureBlobStorage9_connectionString": {
			"type": "secureString",
			"metadata": "'AzureBlobStorage9' の 'connectionString' のセキュリティで保護された文字列"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "'AzureDataLakeStorage1' の 'accountKey' のセキュリティで保護された文字列"
		},
		"AzureDataLakeStorage2_accountKey": {
			"type": "secureString",
			"metadata": "'AzureDataLakeStorage2' の 'accountKey' のセキュリティで保護された文字列"
		},
		"AzureDatabricks_LinkedService_001_accessToken": {
			"type": "secureString",
			"metadata": "'AzureDatabricks_LinkedService_001' の 'accessToken' のセキュリティで保護された文字列"
		},
		"AzureFileStorage1_connectionString": {
			"type": "secureString",
			"metadata": "'AzureFileStorage1' の 'connectionString' のセキュリティで保護された文字列"
		},
		"AzurePostgreSql1_connectionString": {
			"type": "secureString",
			"metadata": "'AzurePostgreSql1' の 'connectionString' のセキュリティで保護された文字列"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "'AzureSqlDatabase1' の 'connectionString' のセキュリティで保護された文字列"
		},
		"AzureSynapseAnalytics1_connectionString": {
			"type": "secureString",
			"metadata": "'AzureSynapseAnalytics1' の 'connectionString' のセキュリティで保護された文字列"
		},
		"AzureSynapseAnalytics2_connectionString": {
			"type": "secureString",
			"metadata": "'AzureSynapseAnalytics2' の 'connectionString' のセキュリティで保護された文字列"
		},
		"AzureSynapseAnalytics3_connectionString": {
			"type": "secureString",
			"metadata": "'AzureSynapseAnalytics3' の 'connectionString' のセキュリティで保護された文字列"
		},
		"AzureSynapseAnalytics4_connectionString": {
			"type": "secureString",
			"metadata": "'AzureSynapseAnalytics4' の 'connectionString' のセキュリティで保護された文字列"
		},
		"AzureSynapseAnalytics5_connectionString": {
			"type": "secureString",
			"metadata": "'AzureSynapseAnalytics5' の 'connectionString' のセキュリティで保護された文字列",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=taizawatest001.sql.azuresynapse.net;Initial Catalog=SampleSQL"
		},
		"CosmosDb1_connectionString": {
			"type": "secureString",
			"metadata": "'CosmosDb1' の 'connectionString' のセキュリティで保護された文字列"
		},
		"CosmosDbMongoDbApi1_connectionString": {
			"type": "secureString",
			"metadata": "'CosmosDbMongoDbApi1' の 'connectionString' のセキュリティで保護された文字列"
		},
		"Dynamics365_password": {
			"type": "secureString",
			"metadata": "'Dynamics365' の 'password' のセキュリティで保護された文字列"
		},
		"FileServer1_password": {
			"type": "secureString",
			"metadata": "'FileServer1' の 'password' のセキュリティで保護された文字列"
		},
		"FileServer2_password": {
			"type": "secureString",
			"metadata": "'FileServer2' の 'password' のセキュリティで保護された文字列"
		},
		"FtpServer1_password": {
			"type": "secureString",
			"metadata": "'FtpServer1' の 'password' のセキュリティで保護された文字列"
		},
		"MySqlOnVM_connectionString": {
			"type": "secureString",
			"metadata": "'MySqlOnVM' の 'connectionString' のセキュリティで保護された文字列"
		},
		"PostgreSql1_connectionString": {
			"type": "secureString",
			"metadata": "'PostgreSql1' の 'connectionString' のセキュリティで保護された文字列"
		},
		"Salesforce1_password": {
			"type": "secureString",
			"metadata": "'Salesforce1' の 'password' のセキュリティで保護された文字列"
		},
		"Salesforce1_securityToken": {
			"type": "secureString",
			"metadata": "'Salesforce1' の 'securityToken' のセキュリティで保護された文字列"
		},
		"SalesforceServiceCloud1_password": {
			"type": "secureString",
			"metadata": "'SalesforceServiceCloud1' の 'password' のセキュリティで保護された文字列"
		},
		"SalesforceServiceCloud1_securityToken": {
			"type": "secureString",
			"metadata": "'SalesforceServiceCloud1' の 'securityToken' のセキュリティで保護された文字列"
		},
		"SapOdp1_password": {
			"type": "secureString",
			"metadata": "'SapOdp1' の 'password' のセキュリティで保護された文字列"
		},
		"SapTable1_password": {
			"type": "secureString",
			"metadata": "'SapTable1' の 'password' のセキュリティで保護された文字列"
		},
		"Sftp1_password": {
			"type": "secureString",
			"metadata": "'Sftp1' の 'password' のセキュリティで保護された文字列"
		},
		"Sftp2_password": {
			"type": "secureString",
			"metadata": "'Sftp2' の 'password' のセキュリティで保護された文字列"
		},
		"SharePointOnlineList1_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "'SharePointOnlineList1' の 'servicePrincipalKey' のセキュリティで保護された文字列"
		},
		"SharePointOnlineList_admin2_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "'SharePointOnlineList_admin2' の 'servicePrincipalKey' のセキュリティで保護された文字列"
		},
		"SharePointOnlineList_owner02_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "'SharePointOnlineList_owner02' の 'servicePrincipalKey' のセキュリティで保護された文字列"
		},
		"Snowflake1_connectionString": {
			"type": "secureString",
			"metadata": "'Snowflake1' の 'connectionString' のセキュリティで保護された文字列"
		},
		"incLoadTaizawa001_connectionString": {
			"type": "secureString",
			"metadata": "'incLoadTaizawa001' の 'connectionString' のセキュリティで保護された文字列"
		},
		"test_connectionString": {
			"type": "secureString",
			"metadata": "'test' の 'connectionString' のセキュリティで保護された文字列"
		},
		"ADLSGen2_datalakestoragetaizawa_MSI_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakestoragetaizawa.dfs.core.windows.net/"
		},
		"AzureBlobStorage1_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://storageacctaizawa.blob.core.windows.net"
		},
		"AzureBlobStorage8_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://storageacctaizawa.blob.core.windows.net/"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storageacctaizawa.dfs.core.windows.net"
		},
		"AzureDataLakeStorage2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakestoragetaizawa2.dfs.core.windows.net"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://TaizawaTestKeyVault01.vault.azure.net/"
		},
		"AzureMLService1_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "d050af2c-cbd5-40e7-a95d-c6119e9cf256"
		},
		"AzureMLService1_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "RG-taizawa001"
		},
		"AzureMLService1_properties_typeProperties_mlWorkspaceName": {
			"type": "string",
			"defaultValue": "taizawa-AML"
		},
		"AzureMLService2_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "d050af2c-cbd5-40e7-a95d-c6119e9cf256"
		},
		"AzureMLService2_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "RG-taizawa001"
		},
		"AzureMLService2_properties_typeProperties_mlWorkspaceName": {
			"type": "string",
			"defaultValue": "taizawa-AML"
		},
		"AzureMLService3_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "d050af2c-cbd5-40e7-a95d-c6119e9cf256"
		},
		"AzureMLService3_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "RG-taizawa001"
		},
		"AzureMLService3_properties_typeProperties_mlWorkspaceName": {
			"type": "string",
			"defaultValue": "taizawa-AML"
		},
		"AzureMLService4_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "d050af2c-cbd5-40e7-a95d-c6119e9cf256"
		},
		"AzureMLService4_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "RG-taizawa001"
		},
		"AzureMLService4_properties_typeProperties_mlWorkspaceName": {
			"type": "string",
			"defaultValue": "taizawa-AML"
		},
		"Blob_2210270060001002_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://storageacctaizawa.blob.core.windows.net/"
		},
		"Blob_SAS_sasUri": {
			"type": "secureString",
			"metadata": "'Blob_SAS' の 'sasUri' のセキュリティで保護された文字列"
		},
		"Blob_SAS2_sasUri": {
			"type": "secureString",
			"metadata": "'Blob_SAS2' の 'sasUri' のセキュリティで保護された文字列"
		},
		"Blob_SAS3_sasUri": {
			"type": "secureString",
			"metadata": "'Blob_SAS3' の 'sasUri' のセキュリティで保護された文字列"
		},
		"CosmosDbMongoDbApi1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "test001"
		},
		"Dynamics365_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "tokaneko-ADF-test@DynFTEJPN.onmicrosoft.com"
		},
		"FileServer1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\SHIR"
		},
		"FileServer1_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "redmond\\taizawa"
		},
		"FileServer2_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C://sftp-root"
		},
		"FileServer2_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "redmond\\taizawa"
		},
		"FtpServer1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "localhost"
		},
		"FtpServer1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ftp_user"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storageacctaizawa.z11.web.core.windows.net/cars.csv"
		},
		"HttpServer2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storageacctaizawa.z11.web.core.windows.net/cars.csv"
		},
		"HttpServer3_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://countries.trevorblades.com/"
		},
		"HttpServer_2301180060001129_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storageacctaizawa.z11.web.core.windows.net/cars.csv"
		},
		"Rest_2303060060000184_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://disclosure.edinet-fsa.go.jp/api/v1/documents.json?date=2019-04-01&type=2"
		},
		"Rest_storageacctaizawa_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://storageacctaizawa.blob.core.windows.net/"
		},
		"Salesforce1_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://mskk-taizawa-dev-ed.my.salesforce.com"
		},
		"Salesforce1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": " aizawax512+api01@gmail.com"
		},
		"SalesforceServiceCloud1_properties_typeProperties_environmentUrl": {
			"type": "string",
			"defaultValue": "https://login.salesforce.com"
		},
		"SalesforceServiceCloud1_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "testtest"
		},
		"SapOdp1_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "aaa"
		},
		"SapOdp1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "aaa"
		},
		"SapOdp1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "aaa"
		},
		"SapOdp1_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "aaa"
		},
		"SapTable1_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "test"
		},
		"SapTable1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "test"
		},
		"SapTable1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "test"
		},
		"SapTable1_properties_typeProperties_systemNumber": {
			"type": "string",
			"defaultValue": "test"
		},
		"Sftp1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "localhost"
		},
		"Sftp1_properties_typeProperties_hostKeyFingerprint": {
			"type": "string",
			"defaultValue": "ssh-rsa 3072 8c:bd:37:22:f2:c9:fa:4a:4c:cf:77:f8:14:34:e3:83"
		},
		"Sftp1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "administrator"
		},
		"Sftp2_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "localhost"
		},
		"Sftp2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ftp_user"
		},
		"SharePointOnlineList1_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "4d0976c7-9efc-4b69-b2bf-e5dbc1d38a13"
		},
		"SharePointOnlineList2_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "4d0976c7-9efc-4b69-b2bf-e5dbc1d38a13"
		},
		"SharePointOnlineList_admin2_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "bcb3ef6d-233f-4a5f-a65c-736adf68a47e"
		},
		"SharePointOnlineList_owner02_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "b129a7ab-f323-4f8d-83ef-102d320f3267"
		},
		"linkedService_for _staging_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://taizawa4staging.blob.core.windows.net/"
		},
		"BlobEventsTrigger001_properties_TriggerTest_parameters_p1": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"BlobEventsTrigger001_properties_TriggerTest_parameters_p2": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"BlobEventsTrigger001_properties_TriggerTest_parameters_p3": {
			"type": "string",
			"defaultValue": "@triggerBody().startTime"
		},
		"BlobEventsTrigger001_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-taizawa001/providers/Microsoft.Storage/storageAccounts/datalakestoragetaizawa"
		},
		"SchduleTrigger001_properties_TriggerTest_parameters_p1": {
			"type": "string",
			"defaultValue": "param1"
		},
		"SchduleTrigger001_properties_TriggerTest_parameters_p2": {
			"type": "string",
			"defaultValue": "param2"
		},
		"SchduleTrigger001_properties_TriggerTest_parameters_p3": {
			"type": "string",
			"defaultValue": "param3"
		},
		"Schdule_TriggerTest003_properties_TriggerTest_parameters_p1": {
			"type": "string",
			"defaultValue": "1"
		},
		"Schdule_TriggerTest003_properties_TriggerTest_parameters_p2": {
			"type": "string",
			"defaultValue": "2"
		},
		"Schdule_TriggerTest003_properties_TriggerTest_parameters_p3": {
			"type": "string",
			"defaultValue": "3"
		},
		"Schedule_TriggerTest002_properties_TriggerTest_parameters_p1": {
			"type": "string",
			"defaultValue": "1"
		},
		"Schedule_TriggerTest002_properties_TriggerTest_parameters_p2": {
			"type": "string",
			"defaultValue": "2"
		},
		"Schedule_TriggerTest002_properties_TriggerTest_parameters_p3": {
			"type": "string",
			"defaultValue": "3"
		},
		"AzureFileStorage222_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-taizawa001/providers/Microsoft.Storage/storageAccounts/storageacctaizawa"
		},
		"AzureFileStorage222_properties_groupId": {
			"type": "string",
			"defaultValue": "file"
		},
		"AzureFileStorage222_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"storageacctaizawa.file.core.windows.net"
			]
		},
		"AzureFunction584_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/taizawaTest001_group/providers/Microsoft.Web/sites/taizawaTest001"
		},
		"AzureFunction584_properties_groupId": {
			"type": "string",
			"defaultValue": "sites"
		},
		"AzureKeyVault400_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-adftemplate001/providers/Microsoft.KeyVault/vaults/TaizawaTestKeyVault01"
		},
		"AzureKeyVault400_properties_groupId": {
			"type": "string",
			"defaultValue": "vault"
		},
		"AzureKeyVault400_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"taizawatestkeyvault01.vault.azure.net"
			]
		},
		"AzureSynapseAnalytics001_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-taizawa001/providers/Microsoft.Synapse/workspaces/taizawatest001"
		},
		"AzureSynapseAnalytics001_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlOnDemand"
		},
		"PrivateLinkService892_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/mc_taizawaaksprivate0711_2_taizawaaksprivatecluster0711-2_japaneast/providers/Microsoft.Network/privateLinkServices/pls-a3cf84b5be1564d03a702771f8fcd5d0"
		},
		"PrivateLinkService892_properties_groupId": {
			"type": "string",
			"defaultValue": ""
		},
		"PrivateLinkService892_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"lb.private.contoso.com"
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/2206030060000373_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2206030060000373",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "2206030060000373_in",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "2206030060000373",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2206030060000373_in')]",
				"[concat(variables('factoryId'), '/datasets/Parquet1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2206270060000972')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DataFlowのソースで、完了後にファイルを移動するオプションの挙動を確認。",
				"activities": [
					{
						"name": "2206270060000972",
						"description": "DataFlowのソースで、完了後にファイルを移動するオプションの挙動を確認。",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlow_2206270060000972",
								"type": "DataFlowReference",
								"parameters": {
									"azureRootFolder": {
										"value": "'@{variables('azureRootFolder')}'",
										"type": "Expression"
									},
									"ftpFileName": {
										"value": "'@{variables('ftpFileName')}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"ADLSGen2": {
										"filePath": {
											"value": "@{variables('azureRootFolder')}/work",
											"type": "Expression"
										},
										"fileName": {
											"value": "@variables('ftpFileName')",
											"type": "Expression"
										}
									},
									"ADLSGen2out": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"azureRootFolder": {
						"type": "String",
						"defaultValue": "ETL/AD01"
					},
					"ftpFileName": {
						"type": "String",
						"defaultValue": "MKI_DMS_RECOVERY"
					}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DataFlow_2206270060000972')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2301240060000138_copy_XML')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"detectDataType": false,
									"namespaces": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['author']"
										},
										"sink": {
											"name": "Author",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['genre']"
										},
										"sink": {
											"name": "Genre",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['price']"
										},
										"sink": {
											"name": "Price",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['publish_date']"
										},
										"sink": {
											"name": "Date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['description']"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['test']"
										},
										"sink": {
											"name": "Test",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['@id']"
										},
										"sink": {
											"name": "ID",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['catalog']['book']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "Blob_Xml",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Blob_Xml')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2301260060000444')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 300
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/2302080010000599_Copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "MySQL ⇒ Parquet",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MySqlSource"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "NAME",
											"type": "String"
										},
										"sink": {
											"name": "NAME",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CREATED_YEAR_MONTH",
											"type": "Decimal"
										},
										"sink": {
											"name": "CREATED_YEAR_MONTH",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": false,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "MySqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet_ADLS_Gen2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MySqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/Parquet_ADLS_Gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2302080010000599_Copy_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "NAME",
											"type": "String"
										},
										"sink": {
											"name": "NAME",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "CREATED_YEAR_MONTH",
											"type": "Decimal"
										},
										"sink": {
											"name": "CREATED_YEAR_MONTH",
											"type": "Decimal",
											"physicalType": "DECIMAL"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet_ADLS_Gen2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet_ADLS_Gen2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet_ADLS_Gen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2302160060001405')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy & 解凍",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"useBinaryTransfer": true,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"compressionProperties": {
										"type": "TarGZipReadSettings",
										"preserveCompressionFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FTP_CSV_2302160060001405",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText5",
								"type": "DatasetReference",
								"parameters": {
									"folder": "decompress"
								}
							}
						]
					},
					{
						"name": "Main Process",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "decompress/*",
									"wildcardFileName": "test005.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText5",
								"type": "DatasetReference",
								"parameters": {
									"folder": "decompress"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText6",
								"type": "DatasetReference",
								"parameters": {
									"folder": "targetFile",
									"fileName": "test005.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FTP_CSV_2302160060001405')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText5')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText6')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/7z_Copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "7z_Copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "7zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "7zip_ADLSGen2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/7zip')]",
				"[concat(variables('factoryId'), '/datasets/7zip_ADLSGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutomationWebhook')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExecuteWebhook",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://cd08f1ae-eaa6-4202-991f-5a63f633838a.webhook.jpe.azure-automation.net/webhooks?token=YFcERaCZ6urZCjLJ4xvxKK7KiXFgCyucXgCyqCQhek4%3d",
							"connectVia": {
								"referenceName": "SHIR-taizawa2",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "ExecuteWebhook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 30
						}
					},
					{
						"name": "GetJobStatus",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://management.azure.com/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-taizawa001/providers/Microsoft.Automation/automationAccounts/AutomationTaizawaTest/jobs/',activity('ExecuteWebhook').output.JobIds[0] ,'?api-version=2019-06-01')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "SHIR-taizawa2",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetJobStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('GetJobStatus').output.properties.status, 'Completed')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Fail1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "error",
										"errorCode": "error"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob to Dynamics365')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Blob to Dynamics365",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "customerid@EntityReference",
										"value": {
											"value": "account",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DynamicsSink",
								"writeBatchSize": 10,
								"writeBehavior": "upsert",
								"ignoreNullValues": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "受注ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "salesorderid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "顧客",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customerid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "customerid@EntityReference"
										},
										"sink": {
											"name": "customerid@EntityReference"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ExcelForDynamics365",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DynamicsEntity365",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ExcelForDynamics365')]",
				"[concat(variables('factoryId'), '/datasets/DynamicsEntity365')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_2210270060001002')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"description": "o",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "2210270060001002_DF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {
										"Folderpass": "hoge"
									}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "AzureintegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/2210270060001002_DF')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_0c2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_0c2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "input//"
							},
							{
								"name": "Destination",
								"value": "output//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_0c2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_0c2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_0c2')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_0c2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_0sv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_0sv",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "input//"
							},
							{
								"name": "Destination",
								"value": "output//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_0sv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_0sv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_0sv')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_0sv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_64o')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_64o",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "input//"
							},
							{
								"name": "Destination",
								"value": "output//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_64o",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_64o",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_64o')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_64o')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_f5e')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_f5e",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_f5e",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "dbo.@{item().destination.table}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"translator": {
											"value": "@item().copyActivity.translator",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_f5e",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_f5e",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().destination.table"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "Books"
								},
								"destination": {
									"table": "Books"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ID",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "ID",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "Author",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Author",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "Genre",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Genre",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "Price",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Price",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "Date",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Date",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "Description",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Description",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "Test",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Test",
													"type": "String",
													"physicalType": "varchar"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"table": "Cars"
								},
								"destination": {
									"table": "Cars"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ID",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ID",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "Name",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Name",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "Model",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Model",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "Length",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "Length",
													"type": "Int32",
													"physicalType": "int"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"table": "Cars_Copy"
								},
								"destination": {
									"table": "Cars_Copy"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ID",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ID",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "Name",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "Name",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "Model",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "Model",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "Length",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "Length",
													"type": "Int32",
													"physicalType": "int"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"table": "Countries_"
								},
								"destination": {
									"table": "Countries_"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ID",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ID",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "Name",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Name",
													"type": "String",
													"physicalType": "varchar"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"table": "hogehoge"
								},
								"destination": {
									"table": "hogehoge"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "Id",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "Id",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "SinkCreatedOn",
													"type": "DateTime",
													"physicalType": "datetime2"
												},
												"sink": {
													"name": "SinkCreatedOn",
													"type": "DateTime",
													"physicalType": "datetime2"
												}
											},
											{
												"source": {
													"name": "SinkModifiedOn",
													"type": "DateTime",
													"physicalType": "datetime2"
												},
												"sink": {
													"name": "SinkModifiedOn",
													"type": "DateTime",
													"physicalType": "datetime2"
												}
											},
											{
												"source": {
													"name": "statecode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "statecode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "statuscode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "statuscode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "industrycode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "industrycode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "customersizecode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "customersizecode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "accountratingcode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "accountratingcode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "address1_shippingmethodcode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "address1_shippingmethodcode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "businesstypecode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "businesstypecode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "shippingmethodcode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "shippingmethodcode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "preferredappointmenttimecode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "preferredappointmenttimecode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "address2_shippingmethodcode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "address2_shippingmethodcode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "territorycode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "territorycode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "accountclassificationcode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "accountclassificationcode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "preferredcontactmethodcode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "preferredcontactmethodcode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "preferredappointmentdaycode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "preferredappointmentdaycode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "paymenttermscode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "paymenttermscode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "address1_addresstypecode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "address1_addresstypecode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "ownershipcode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "ownershipcode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "address2_freighttermscode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "address2_freighttermscode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "address2_addresstypecode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "address2_addresstypecode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "address1_freighttermscode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "address1_freighttermscode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "customertypecode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "customertypecode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "accountcategorycode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "accountcategorycode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "marketingonly",
													"type": "Boolean",
													"physicalType": "bit"
												},
												"sink": {
													"name": "marketingonly",
													"type": "Boolean",
													"physicalType": "bit"
												}
											},
											{
												"source": {
													"name": "donotpostalmail",
													"type": "Boolean",
													"physicalType": "bit"
												},
												"sink": {
													"name": "donotpostalmail",
													"type": "Boolean",
													"physicalType": "bit"
												}
											},
											{
												"source": {
													"name": "donotbulkpostalmail",
													"type": "Boolean",
													"physicalType": "bit"
												},
												"sink": {
													"name": "donotbulkpostalmail",
													"type": "Boolean",
													"physicalType": "bit"
												}
											},
											{
												"source": {
													"name": "donotbulkemail",
													"type": "Boolean",
													"physicalType": "bit"
												},
												"sink": {
													"name": "donotbulkemail",
													"type": "Boolean",
													"physicalType": "bit"
												}
											},
											{
												"source": {
													"name": "donotphone",
													"type": "Boolean",
													"physicalType": "bit"
												},
												"sink": {
													"name": "donotphone",
													"type": "Boolean",
													"physicalType": "bit"
												}
											},
											{
												"source": {
													"name": "donotsendmm",
													"type": "Boolean",
													"physicalType": "bit"
												},
												"sink": {
													"name": "donotsendmm",
													"type": "Boolean",
													"physicalType": "bit"
												}
											},
											{
												"source": {
													"name": "isprivate",
													"type": "Boolean",
													"physicalType": "bit"
												},
												"sink": {
													"name": "isprivate",
													"type": "Boolean",
													"physicalType": "bit"
												}
											},
											{
												"source": {
													"name": "merged",
													"type": "Boolean",
													"physicalType": "bit"
												},
												"sink": {
													"name": "merged",
													"type": "Boolean",
													"physicalType": "bit"
												}
											},
											{
												"source": {
													"name": "donotfax",
													"type": "Boolean",
													"physicalType": "bit"
												},
												"sink": {
													"name": "donotfax",
													"type": "Boolean",
													"physicalType": "bit"
												}
											},
											{
												"source": {
													"name": "donotemail",
													"type": "Boolean",
													"physicalType": "bit"
												},
												"sink": {
													"name": "donotemail",
													"type": "Boolean",
													"physicalType": "bit"
												}
											},
											{
												"source": {
													"name": "creditonhold",
													"type": "Boolean",
													"physicalType": "bit"
												},
												"sink": {
													"name": "creditonhold",
													"type": "Boolean",
													"physicalType": "bit"
												}
											},
											{
												"source": {
													"name": "followemail",
													"type": "Boolean",
													"physicalType": "bit"
												},
												"sink": {
													"name": "followemail",
													"type": "Boolean",
													"physicalType": "bit"
												}
											},
											{
												"source": {
													"name": "participatesinworkflow",
													"type": "Boolean",
													"physicalType": "bit"
												},
												"sink": {
													"name": "participatesinworkflow",
													"type": "Boolean",
													"physicalType": "bit"
												}
											},
											{
												"source": {
													"name": "modifiedonbehalfby",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "modifiedonbehalfby",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "modifiedonbehalfby_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "modifiedonbehalfby_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "modifiedby",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "modifiedby",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "modifiedby_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "modifiedby_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "modifiedbyexternalparty",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "modifiedbyexternalparty",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "modifiedbyexternalparty_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "modifiedbyexternalparty_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "owninguser",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "owninguser",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "owninguser_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "owninguser_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "transactioncurrencyid",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "transactioncurrencyid",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "transactioncurrencyid_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "transactioncurrencyid_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "slainvokedid",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "slainvokedid",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "slainvokedid_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "slainvokedid_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "createdbyexternalparty",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "createdbyexternalparty",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "createdbyexternalparty_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "createdbyexternalparty_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "createdonbehalfby",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "createdonbehalfby",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "createdonbehalfby_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "createdonbehalfby_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "parentaccountid",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "parentaccountid",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "parentaccountid_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "parentaccountid_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "primarycontactid",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "primarycontactid",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "primarycontactid_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "primarycontactid_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "slaid",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "slaid",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "slaid_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "slaid_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "masterid",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "masterid",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "masterid_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "masterid_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "owningbusinessunit",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "owningbusinessunit",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "owningbusinessunit_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "owningbusinessunit_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "owningteam",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "owningteam",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "owningteam_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "owningteam_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "preferredsystemuserid",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "preferredsystemuserid",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "preferredsystemuserid_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "preferredsystemuserid_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "createdby",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "createdby",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "createdby_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "createdby_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "ownerid",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "ownerid",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "ownerid_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "ownerid_entitytype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "aging90",
													"type": "Decimal",
													"physicalType": "decimal"
												},
												"sink": {
													"name": "aging90",
													"type": "Decimal",
													"physicalType": "decimal"
												}
											},
											{
												"source": {
													"name": "creditlimit_base",
													"type": "Decimal",
													"physicalType": "decimal"
												},
												"sink": {
													"name": "creditlimit_base",
													"type": "Decimal",
													"physicalType": "decimal"
												}
											},
											{
												"source": {
													"name": "aging60_base",
													"type": "Decimal",
													"physicalType": "decimal"
												},
												"sink": {
													"name": "aging60_base",
													"type": "Decimal",
													"physicalType": "decimal"
												}
											},
											{
												"source": {
													"name": "marketcap",
													"type": "Decimal",
													"physicalType": "decimal"
												},
												"sink": {
													"name": "marketcap",
													"type": "Decimal",
													"physicalType": "decimal"
												}
											},
											{
												"source": {
													"name": "revenue",
													"type": "Decimal",
													"physicalType": "decimal"
												},
												"sink": {
													"name": "revenue",
													"type": "Decimal",
													"physicalType": "decimal"
												}
											},
											{
												"source": {
													"name": "aging30_base",
													"type": "Decimal",
													"physicalType": "decimal"
												},
												"sink": {
													"name": "aging30_base",
													"type": "Decimal",
													"physicalType": "decimal"
												}
											},
											{
												"source": {
													"name": "marketcap_base",
													"type": "Decimal",
													"physicalType": "decimal"
												},
												"sink": {
													"name": "marketcap_base",
													"type": "Decimal",
													"physicalType": "decimal"
												}
											},
											{
												"source": {
													"name": "revenue_base",
													"type": "Decimal",
													"physicalType": "decimal"
												},
												"sink": {
													"name": "revenue_base",
													"type": "Decimal",
													"physicalType": "decimal"
												}
											},
											{
												"source": {
													"name": "aging60",
													"type": "Decimal",
													"physicalType": "decimal"
												},
												"sink": {
													"name": "aging60",
													"type": "Decimal",
													"physicalType": "decimal"
												}
											},
											{
												"source": {
													"name": "aging90_base",
													"type": "Decimal",
													"physicalType": "decimal"
												},
												"sink": {
													"name": "aging90_base",
													"type": "Decimal",
													"physicalType": "decimal"
												}
											},
											{
												"source": {
													"name": "aging30",
													"type": "Decimal",
													"physicalType": "decimal"
												},
												"sink": {
													"name": "aging30",
													"type": "Decimal",
													"physicalType": "decimal"
												}
											},
											{
												"source": {
													"name": "creditlimit",
													"type": "Decimal",
													"physicalType": "decimal"
												},
												"sink": {
													"name": "creditlimit",
													"type": "Decimal",
													"physicalType": "decimal"
												}
											},
											{
												"source": {
													"name": "address2_postalcode",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_postalcode",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_longitude",
													"type": "Double",
													"physicalType": "float"
												},
												"sink": {
													"name": "address1_longitude",
													"type": "Double",
													"physicalType": "float"
												}
											},
											{
												"source": {
													"name": "address2_county",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_county",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "slainvokedidname",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "slainvokedidname",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "masteraccountidname",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "masteraccountidname",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "overriddencreatedon",
													"type": "DateTime",
													"physicalType": "datetime2"
												},
												"sink": {
													"name": "overriddencreatedon",
													"type": "DateTime",
													"physicalType": "datetime2"
												}
											},
											{
												"source": {
													"name": "entityimageid",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "entityimageid",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address2_longitude",
													"type": "Double",
													"physicalType": "float"
												},
												"sink": {
													"name": "address2_longitude",
													"type": "Double",
													"physicalType": "float"
												}
											},
											{
												"source": {
													"name": "address2_line3",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_line3",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_telephone2",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_telephone2",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "transactioncurrencyidname",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "transactioncurrencyidname",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_upszone",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_upszone",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "processid",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "processid",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address2_name",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_name",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address2_city",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_city",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "masteraccountidyominame",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "masteraccountidyominame",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "emailaddress2",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "emailaddress2",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "emailaddress1",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "emailaddress1",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "owneridyominame",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "owneridyominame",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_country",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_country",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "modifiedonbehalfbyname",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "modifiedonbehalfbyname",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "modifiedbyname",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "modifiedbyname",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "exchangerate",
													"type": "Decimal",
													"physicalType": "decimal"
												},
												"sink": {
													"name": "exchangerate",
													"type": "Decimal",
													"physicalType": "decimal"
												}
											},
											{
												"source": {
													"name": "address1_line2",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_line2",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_postofficebox",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_postofficebox",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "createdbyexternalpartyyominame",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "createdbyexternalpartyyominame",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "numberofemployees",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "numberofemployees",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "modifiedbyexternalpartyyominame",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "modifiedbyexternalpartyyominame",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_utcoffset",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "address1_utcoffset",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "address2_stateorprovince",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_stateorprovince",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "telephone1",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "telephone1",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_stateorprovince",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_stateorprovince",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "modifiedon",
													"type": "DateTime",
													"physicalType": "datetime2"
												},
												"sink": {
													"name": "modifiedon",
													"type": "DateTime",
													"physicalType": "datetime2"
												}
											},
											{
												"source": {
													"name": "createdon",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "createdon",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "accountid",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "accountid",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address2_utcoffset",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "address2_utcoffset",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "owningbusinessunitname",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "owningbusinessunitname",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "modifiedbyyominame",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "modifiedbyyominame",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "parentaccountidyominame",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "parentaccountidyominame",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_county",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_county",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_telephone3",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_telephone3",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "entityimage_url",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "entityimage_url",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "primarytwitterid",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "primarytwitterid",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address2_line2",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_line2",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "createdonbehalfbyname",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "createdonbehalfbyname",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "yominame",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "yominame",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_city",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_city",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "fax",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "fax",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "timezoneruleversionnumber",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "timezoneruleversionnumber",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "createdonbehalfbyyominame",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "createdonbehalfbyyominame",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address2_composite",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_composite",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "owneridtype",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "owneridtype",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_name",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_name",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address2_upszone",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_upszone",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "parentaccountidname",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "parentaccountidname",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "telephone3",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "telephone3",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "entityimage_timestamp",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "entityimage_timestamp",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "modifiedbyexternalpartyname",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "modifiedbyexternalpartyname",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "cr558_file",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "cr558_file",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "emailaddress3",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "emailaddress3",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_latitude",
													"type": "Double",
													"physicalType": "float"
												},
												"sink": {
													"name": "address1_latitude",
													"type": "Double",
													"physicalType": "float"
												}
											},
											{
												"source": {
													"name": "primarysatoriid",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "primarysatoriid",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address2_country",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_country",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "telephone2",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "telephone2",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "createdbyexternalpartyname",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "createdbyexternalpartyname",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "lastusedincampaign",
													"type": "DateTime",
													"physicalType": "datetime2"
												},
												"sink": {
													"name": "lastusedincampaign",
													"type": "DateTime",
													"physicalType": "datetime2"
												}
											},
											{
												"source": {
													"name": "accountnumber",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "accountnumber",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_line3",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_line3",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "primarycontactidname",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "primarycontactidname",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "timespentbymeonemailandmeetings",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "timespentbymeonemailandmeetings",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_primarycontactname",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_primarycontactname",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "preferredsystemuseridname",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "preferredsystemuseridname",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address2_postofficebox",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_postofficebox",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "primarycontactidyominame",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "primarycontactidyominame",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "versionnumber",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "versionnumber",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "slaname",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "slaname",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_composite",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_composite",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "ftpsiteurl",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "ftpsiteurl",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "sic",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "sic",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address2_line1",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_line1",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "lastonholdtime",
													"type": "DateTime",
													"physicalType": "datetime2"
												},
												"sink": {
													"name": "lastonholdtime",
													"type": "DateTime",
													"physicalType": "datetime2"
												}
											},
											{
												"source": {
													"name": "cr558_file_name",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "cr558_file_name",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_telephone1",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_telephone1",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address2_fax",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_fax",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "description",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "description",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "stageid",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "stageid",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "websiteurl",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "websiteurl",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "utcconversiontimezonecode",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "utcconversiontimezonecode",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "stockexchange",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "stockexchange",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_addressid",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_addressid",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address2_latitude",
													"type": "Double",
													"physicalType": "float"
												},
												"sink": {
													"name": "address2_latitude",
													"type": "Double",
													"physicalType": "float"
												}
											},
											{
												"source": {
													"name": "traversedpath",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "traversedpath",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address2_addressid",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_addressid",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "onholdtime",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "onholdtime",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "address1_line1",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_line1",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "createdbyyominame",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "createdbyyominame",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "owneridname",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "owneridname",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address2_telephone1",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_telephone1",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address2_telephone2",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_telephone2",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address2_telephone3",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_telephone3",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "createdbyname",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "createdbyname",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "tickersymbol",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "tickersymbol",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address2_primarycontactname",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address2_primarycontactname",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "modifiedonbehalfbyyominame",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "modifiedonbehalfbyyominame",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "address1_fax",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_fax",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "importsequencenumber",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "importsequencenumber",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "name",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "name",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "preferredsystemuseridyominame",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "preferredsystemuseridyominame",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "sharesoutstanding",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "sharesoutstanding",
													"type": "Int64",
													"physicalType": "bigint"
												}
											},
											{
												"source": {
													"name": "address1_postalcode",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "address1_postalcode",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "cr558_number_test",
													"type": "Int64",
													"physicalType": "bigint"
												},
												"sink": {
													"name": "cr558_number_test",
													"type": "Int64",
													"physicalType": "bigint"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"table": "Movies"
								},
								"destination": {
									"table": "Movies"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ID",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ID",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "Title",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Title",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "Genres",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Genres",
													"type": "String",
													"physicalType": "varchar"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"table": "Snowflake"
								},
								"destination": {
									"table": "Snowflake"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "V",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "V",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "T",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "T",
													"type": "String",
													"physicalType": "nvarchar"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"table": "Snowflake_Customer"
								},
								"destination": {
									"table": "Snowflake_Customer"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "C_CUSTKEY",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "C_CUSTKEY",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "C_NAME",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "C_NAME",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "C_ADDRESS",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "C_ADDRESS",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "C_NATIONKEY",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "C_NATIONKEY",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "C_PHONE",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "C_PHONE",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "C_ACCTBAL",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "C_ACCTBAL",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "C_MKTSEGMENT",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "C_MKTSEGMENT",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "C_COMMENT",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "C_COMMENT",
													"type": "String",
													"physicalType": "nvarchar"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"table": "test_Rest"
								},
								"destination": {
									"table": "test_Rest"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "seqNumber",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "seqNumber",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "docID",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "docID",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "edinetCode",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "edinetCode",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "secCode",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "secCode",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "JCN",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "JCN",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "filerName",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "filerName",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "fundCode",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "fundCode",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "ordinanceCode",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "ordinanceCode",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "formCode",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "formCode",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "docTypeCode",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "docTypeCode",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "periodStart",
													"type": "DateTime",
													"physicalType": "date"
												},
												"sink": {
													"name": "periodStart",
													"type": "DateTime",
													"physicalType": "date"
												}
											},
											{
												"source": {
													"name": "periodEnd",
													"type": "DateTime",
													"physicalType": "date"
												},
												"sink": {
													"name": "periodEnd",
													"type": "DateTime",
													"physicalType": "date"
												}
											},
											{
												"source": {
													"name": "submitDateTime",
													"type": "DateTime",
													"physicalType": "datetime"
												},
												"sink": {
													"name": "submitDateTime",
													"type": "DateTime",
													"physicalType": "datetime"
												}
											},
											{
												"source": {
													"name": "docDescription",
													"type": "String",
													"physicalType": "nvarchar"
												},
												"sink": {
													"name": "docDescription",
													"type": "String",
													"physicalType": "nvarchar"
												}
											},
											{
												"source": {
													"name": "issuerEdinetCode",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "issuerEdinetCode",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "subjectEdinetCode",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "subjectEdinetCode",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "subsidiaryEdinetCode",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "subsidiaryEdinetCode",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "currentReportReason",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "currentReportReason",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "parentDocID",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "parentDocID",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "opeDateTime",
													"type": "DateTime",
													"physicalType": "datetime"
												},
												"sink": {
													"name": "opeDateTime",
													"type": "DateTime",
													"physicalType": "datetime"
												}
											},
											{
												"source": {
													"name": "withdrawalStatus",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "withdrawalStatus",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "docInfoEditStatus",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "docInfoEditStatus",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "disclosureStatus",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "disclosureStatus",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "xbrFlag",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "xbrFlag",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "pdfFlag",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "pdfFlag",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "attachDocFlag",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "attachDocFlag",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "englishDocFlag",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "englishDocFlag",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "csvFlag",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "csvFlag",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "legalStatus",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "legalStatus",
													"type": "Int32",
													"physicalType": "int"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_f5e')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_f5e')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_ja0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_ja0",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "excelinput//"
							},
							{
								"name": "Destination",
								"value": "exceloutput//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "*",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_ja0",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_ja0",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_ja0')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_ja0')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_lda')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_lda",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_lda",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "dbo.@{item().destination.table}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"translator": {
											"value": "@item().copyActivity.translator",
											"type": "Expression"
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_lda",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_lda",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().destination.table"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "Cars"
								},
								"destination": {
									"table": "Cars"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ID",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ID",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "Name",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Name",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "Model",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Model",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "Length",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "Length",
													"type": "Int32",
													"physicalType": "int"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							},
							{
								"source": {
									"table": "Movies"
								},
								"destination": {
									"table": "Movies"
								},
								"copyActivity": {
									"translator": {
										"type": "TabularTranslator",
										"mappings": [
											{
												"source": {
													"name": "ID",
													"type": "Int32",
													"physicalType": "int"
												},
												"sink": {
													"name": "ID",
													"type": "Int32",
													"physicalType": "int"
												}
											},
											{
												"source": {
													"name": "Title",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Title",
													"type": "String",
													"physicalType": "varchar"
												}
											},
											{
												"source": {
													"name": "Genres",
													"type": "String",
													"physicalType": "varchar"
												},
												"sink": {
													"name": "Genres",
													"type": "String",
													"physicalType": "varchar"
												}
											}
										],
										"typeConversion": true,
										"typeConversionSettings": {
											"allowDataTruncation": true,
											"treatBooleanAsNumber": false
										}
									}
								}
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_lda')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_lda')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_lsz')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_lsz",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "input//"
							},
							{
								"name": "Destination",
								"value": "/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "Test.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 1
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_lsz",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_lsz",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_lsz')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_lsz')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_vk4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_vk4",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "input//"
							},
							{
								"name": "Destination",
								"value": "output//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_vk4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_vk4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_vk4')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_vk4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataflow_Dataverse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataverse",
								"type": "DataFlowReference",
								"parameters": {
									"test": "{顧客}"
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Dataverse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Decompress7z')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WebHookDecompress7z",
						"type": "WebHook",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://cd08f1ae-eaa6-4202-991f-5a63f633838a.webhook.jpe.azure-automation.net/webhooks?token=FGPXKa4kNLgsh0%2ffs0DjSwXjiXKmf9j4P80GoQYG%2bmw%3d",
							"method": "POST",
							"headers": {},
							"body": {},
							"timeout": "00:10:00",
							"reportStatusOnCallBack": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelToExcel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExcelToExcel",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Binary1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLSGen2Binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:44:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary1')]",
				"[concat(variables('factoryId'), '/datasets/ADLSGen2Binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FTP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ワイルドカード",
				"activities": [
					{
						"name": "set_full_date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_full_datetime",
							"value": {
								"value": "@formatDateTime(subtractFromTime(convertFromUtc(utcNow(),'Tokyo Standard Time'),1,'Day'),'yyyyMMdd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set_full_date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"wildcardFolderPath": "test",
									"wildcardFileName": {
										"value": "@{concat(variables('var_full_datetime'),'*1000ENEUTL.csv')}",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false,
									"useBinaryTransfer": true,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ftp_csv",
								"type": "DatasetReference",
								"parameters": {
									"prm_dir": "hoge",
									"prm_filename": "fuga"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_DelimitedText",
								"type": "DatasetReference",
								"parameters": {
									"container": "2301310060000200"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var_full_datetime": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ftp_csv')]",
				"[concat(variables('factoryId'), '/datasets/Blob_DelimitedText')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JSON_Convert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "exchange_criteria",
											"type": "String"
										},
										"sink": {
											"path": "exchange_criteria"
										}
									},
									{
										"source": {
											"name": "redeem_criteria",
											"type": "String"
										},
										"sink": {
											"path": "redeem_criteria"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText_with_JSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText_with_JSON')]",
				"[concat(variables('factoryId'), '/datasets/Json1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JSON_convert2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RenameTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@pipeline().parameters.p2",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Binary2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Binary3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p1": {
						"type": "string"
					},
					"p2": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:44:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary2')]",
				"[concat(variables('factoryId'), '/datasets/Binary3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rest_Copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Rest_Copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "7zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "7zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/7zip')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SuspendTest01')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "7zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "7zip_ADLSGen2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 120
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 120
						}
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "7zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "7zip_ADLSGen2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-07-27T07:01:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/7zip')]",
				"[concat(variables('factoryId'), '/datasets/7zip_ADLSGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SuspendTest2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SuspendTest01",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "7z_Copy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Execute Pipeline2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 120
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-07-27T07:15:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SuspendTest01')]",
				"[concat(variables('factoryId'), '/pipelines/7z_Copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TriggerTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://test",
							"method": "GET",
							"headers": {
								"filePath": {
									"value": "@pipeline().parameters.p1",
									"type": "Expression"
								},
								"fileName": {
									"value": "@pipeline().parameters.p2",
									"type": "Expression"
								},
								"startTime": {
									"value": "@pipeline().parameters.p3",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p1": {
						"type": "string"
					},
					"p2": {
						"type": "string"
					},
					"p3": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Unzip7z')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WebHookUnzip7z",
						"type": "WebHook",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://cd08f1ae-eaa6-4202-991f-5a63f633838a.webhook.jpe.azure-automation.net/webhooks?token=d9B%2bxq4%2f8VVcLQ8j2%2fglH8EK9pksIhdi7OnB0J0nd7E%3d",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@json(\n  concat(\n    '{\"connectionName\":\"',\n    variables('varConnectionName'),\n    '\",\"storageAccountKey\":\"',\n    variables('storageAccountKey'),\n    '\"}'\n  )\n)",
								"type": "Expression"
							},
							"timeout": "00:10:00",
							"reportStatusOnCallBack": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"varConnectionName": {
						"type": "String",
						"defaultValue": "AzureRunAsConnection"
					},
					"storageAccountKey": {
						"type": "String",
						"defaultValue": "https://cd08f1ae-eaa6-4202-991f-5a63f633838a.webhook.jpe.azure-automation.net/webhooks?token=d9B%2bxq4%2f8VVcLQ8j2%2fglH8EK9pksIhdi7OnB0J0nd7E%3d"
					}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/databricksTest001')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/adftutorial/mynotebook",
							"baseParameters": {
								"input": {
									"value": "@pipeline().parameters.name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks_LinkedService_001",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks_LinkedService_001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_SqlToBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_SqlToBlob",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_SqlToBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "7zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "7zip_ADLSGen2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T06:26:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/7zip')]",
				"[concat(variables('factoryId'), '/datasets/7zip_ADLSGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline10')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "String"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "num",
											"type": "Int32",
											"physicalType": "String"
										},
										"sink": {
											"name": "num",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "decimal",
											"type": "Int32",
											"physicalType": "String"
										},
										"sink": {
											"name": "decimal",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "single",
											"type": "Single",
											"physicalType": "String"
										},
										"sink": {
											"name": "single",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "double",
											"type": "Double",
											"physicalType": "String"
										},
										"sink": {
											"name": "double",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "string",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "string",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Blob_CSV_2210280060000080",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_CSV_2210280060000080_out",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Blob_CSV_2210280060000080')]",
				"[concat(variables('factoryId'), '/datasets/Blob_CSV_2210280060000080_out')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://lb.private.contoso.com",
							"connectVia": {
								"referenceName": "integrationRuntimeManagedVnet",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "7zip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "7zip_ADLSGen2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T06:26:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimeManagedVnet')]",
				"[concat(variables('factoryId'), '/datasets/7zip')]",
				"[concat(variables('factoryId'), '/datasets/7zip_ADLSGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2301170060000436')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Storage_To_Synapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "2301170060000436"
							},
							"integrationRuntime": {
								"referenceName": "AzureintegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-02-06T07:50:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Storage_To_Synapse')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(dayOfMonth(convertFromUtc(utcNow(), 'Tokyo Standard Time')), 4)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"a": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-04T12:02:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 3600
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-25T06:31:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Machine Learning Execute Pipeline1",
						"type": "AzureMLExecutePipeline",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"mlExecutionType": "pipeline",
							"mlPipelineId": "702c4a36-09f0-42b2-9426-86f083c80094"
						},
						"linkedServiceName": {
							"referenceName": "AzureMLService2",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Machine Learning Execute Pipeline2",
						"type": "AzureMLExecutePipeline",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"mlExecutionType": "pipeline",
							"mlPipelineEndpointId": "26bc00fa-aef6-48f9-b7cc-bc4d1be75cdf",
							"version": "0"
						},
						"linkedServiceName": {
							"referenceName": "AzureMLService1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureMLService2')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureMLService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline8')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/adftutorial/mynotebook",
							"libraries": [
								{
									"jar": "dbfs:test.jar"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks_LinkedService_001",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks_LinkedService_001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline9')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_2301170060000436')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Storage_To_Synapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "2301170060000436"
							},
							"integrationRuntime": {
								"referenceName": "AzureintegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:47Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Storage_To_Synapse')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_2301180060001129')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "APIからBlobへのコピー ",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HTTPDelimitedText_2301180060001129",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText_2301180060001129",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HTTPDelimitedText_2301180060001129')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText_2301180060001129')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_2302090060000632')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "SFTP_ワイルドカード",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"wildcardFolderPath": "*",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FileSystemDelimitedText",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_DelimitedText",
								"type": "DatasetReference",
								"parameters": {
									"container": "2302090060000632"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FileSystemDelimitedText')]",
				"[concat(variables('factoryId'), '/datasets/Blob_DelimitedText')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_Dataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('arr')",
								"type": "Expression"
							},
							"batchCount": 30,
							"activities": [
								{
									"name": "Data flow1",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "dataflow1_copy1",
											"type": "DataFlowReference",
											"parameters": {
												"num": {
													"value": "@item()",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"inputCsv": {},
												"sink1": {}
											}
										},
										"staging": {},
										"integrationRuntime": {
											"referenceName": "integrationRuntime1",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Fine"
									}
								},
								{
									"name": "Data flow2",
									"type": "ExecuteDataFlow",
									"dependsOn": [
										{
											"activity": "Data flow1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "dataflow1",
											"type": "DataFlowReference",
											"parameters": {},
											"datasetParameters": {
												"inputCsv": {},
												"sink1": {}
											}
										},
										"staging": {},
										"integrationRuntime": {
											"referenceName": "integrationRuntime1",
											"type": "IntegrationRuntimeReference"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"arr": {
						"type": "Array",
						"defaultValue": [
							1,
							2,
							3,
							4,
							5,
							6,
							7,
							8,
							9,
							10,
							11,
							12,
							13,
							14,
							15,
							16,
							17,
							18,
							19,
							20,
							21,
							22
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-11T09:41:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1_copy1')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_staging')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ステージングコピーの検証\n（ソース：SHIR 。シンク：Azure IR）",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "linkedService_for _staging",
									"type": "LinkedServiceReference"
								},
								"enableCompression": true
							},
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText_local",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText_local')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService_for _staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/powershellTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					},
					{
						"name": "Wait3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Wait2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					},
					{
						"name": "Wait4",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Wait3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-23T03:00:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/regExtractTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"inputCsv": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:44:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rerun-test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "rerun-test",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 60,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "in",
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "rerun_test_in",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "rerun_test_out2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "ADFTest"
				},
				"annotations": [],
				"lastPublishTime": "2022-07-26T05:43:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/rerun_test_in')]",
				"[concat(variables('factoryId'), '/datasets/rerun_test_out2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/wait')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 3000
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-22T12:22:33Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/2206030060000373_in')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CRM_Contact_20220325.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "IsDeleted",
						"type": "String"
					},
					{
						"name": "MasterRecordId",
						"type": "String"
					},
					{
						"name": "AccountId",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "Salutation",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "OtherStreet",
						"type": "String"
					},
					{
						"name": "OtherCity",
						"type": "String"
					},
					{
						"name": "OtherState",
						"type": "String"
					},
					{
						"name": "OtherPostalCode",
						"type": "String"
					},
					{
						"name": "OtherCountry",
						"type": "String"
					},
					{
						"name": "OtherLatitude",
						"type": "String"
					},
					{
						"name": "OtherLongitude",
						"type": "String"
					},
					{
						"name": "OtherGeocodeAccuracy",
						"type": "String"
					},
					{
						"name": "MailingStreet",
						"type": "String"
					},
					{
						"name": "MailingCity",
						"type": "String"
					},
					{
						"name": "MailingState",
						"type": "String"
					},
					{
						"name": "MailingPostalCode",
						"type": "String"
					},
					{
						"name": "MailingCountry",
						"type": "String"
					},
					{
						"name": "MailingLatitude",
						"type": "String"
					},
					{
						"name": "MailingLongitude",
						"type": "String"
					},
					{
						"name": "MailingGeocodeAccuracy",
						"type": "String"
					},
					{
						"name": "Phone",
						"type": "String"
					},
					{
						"name": "Fax",
						"type": "String"
					},
					{
						"name": "MobilePhone",
						"type": "String"
					},
					{
						"name": "HomePhone",
						"type": "String"
					},
					{
						"name": "OtherPhone",
						"type": "String"
					},
					{
						"name": "AssistantPhone",
						"type": "String"
					},
					{
						"name": "ReportsToId",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "Department",
						"type": "String"
					},
					{
						"name": "AssistantName",
						"type": "String"
					},
					{
						"name": "LeadSource",
						"type": "String"
					},
					{
						"name": "Birthdate",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "CurrencyIsoCode",
						"type": "String"
					},
					{
						"name": "OwnerId",
						"type": "String"
					},
					{
						"name": "HasOptedOutOfEmail",
						"type": "String"
					},
					{
						"name": "HasOptedOutOfFax",
						"type": "String"
					},
					{
						"name": "DoNotCall",
						"type": "String"
					},
					{
						"name": "CreatedDate",
						"type": "String"
					},
					{
						"name": "CreatedById",
						"type": "String"
					},
					{
						"name": "LastModifiedDate",
						"type": "String"
					},
					{
						"name": "LastModifiedById",
						"type": "String"
					},
					{
						"name": "SystemModstamp",
						"type": "String"
					},
					{
						"name": "LastActivityDate",
						"type": "String"
					},
					{
						"name": "LastCURequestDate",
						"type": "String"
					},
					{
						"name": "LastCUUpdateDate",
						"type": "String"
					},
					{
						"name": "LastViewedDate",
						"type": "String"
					},
					{
						"name": "LastReferencedDate",
						"type": "String"
					},
					{
						"name": "EmailBouncedReason",
						"type": "String"
					},
					{
						"name": "EmailBouncedDate",
						"type": "String"
					},
					{
						"name": "IsEmailBounced",
						"type": "String"
					},
					{
						"name": "PhotoUrl",
						"type": "String"
					},
					{
						"name": "Jigsaw",
						"type": "String"
					},
					{
						"name": "JigsawContactId",
						"type": "String"
					},
					{
						"name": "IndividualId",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_PersonId__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_SOC__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__Sansan_CompanyId__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__Sansan_CompanyInfo__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__Sansan_PersonId__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__Sansan_PersonInfo__c",
						"type": "String"
					},
					{
						"name": "MyDepartmentFlag__c",
						"type": "String"
					},
					{
						"name": "ABC_Evaluation__c",
						"type": "String"
					},
					{
						"name": "ACCOUNT_NAME__c",
						"type": "String"
					},
					{
						"name": "AREA__c",
						"type": "String"
					},
					{
						"name": "Address__c",
						"type": "String"
					},
					{
						"name": "Building__c",
						"type": "String"
					},
					{
						"name": "BusinessLine__c",
						"type": "String"
					},
					{
						"name": "ChangeDate__c",
						"type": "String"
					},
					{
						"name": "City__c",
						"type": "String"
					},
					{
						"name": "Comment__c",
						"type": "String"
					},
					{
						"name": "DeletedFlg__c",
						"type": "String"
					},
					{
						"name": "MyDivisionFlag__c",
						"type": "String"
					},
					{
						"name": "FirstName_Kana__c",
						"type": "String"
					},
					{
						"name": "HasOptedOutOfEmail__c",
						"type": "String"
					},
					{
						"name": "MyOperationsDepartmentFlag__c",
						"type": "String"
					},
					{
						"name": "LastName_Kana__c",
						"type": "String"
					},
					{
						"name": "MailMagazineFlg__c",
						"type": "String"
					},
					{
						"name": "MailingList__c",
						"type": "String"
					},
					{
						"name": "MobilePhone__c",
						"type": "String"
					},
					{
						"name": "ON_Evaluation__c",
						"type": "String"
					},
					{
						"name": "OldSystemSeqNo__c",
						"type": "String"
					},
					{
						"name": "PRG_Evaluation__c",
						"type": "String"
					},
					{
						"name": "PostalCode__c",
						"type": "String"
					},
					{
						"name": "Prefectures__c",
						"type": "String"
					},
					{
						"name": "RoleLevel__c",
						"type": "String"
					},
					{
						"name": "SeminarFlg__c",
						"type": "String"
					},
					{
						"name": "saveFlg__c",
						"type": "String"
					},
					{
						"name": "ABC_Evaluation_Remark__c",
						"type": "String"
					},
					{
						"name": "ABC__c",
						"type": "String"
					},
					{
						"name": "ON__c",
						"type": "String"
					},
					{
						"name": "PRG__c",
						"type": "String"
					},
					{
						"name": "MySectionFlag__c",
						"type": "String"
					},
					{
						"name": "pi__Needs_Score_Synced__c",
						"type": "String"
					},
					{
						"name": "pi__Pardot_Last_Scored_At__c",
						"type": "String"
					},
					{
						"name": "pi__campaign__c",
						"type": "String"
					},
					{
						"name": "pi__comments__c",
						"type": "String"
					},
					{
						"name": "pi__conversion_date__c",
						"type": "String"
					},
					{
						"name": "pi__conversion_object_name__c",
						"type": "String"
					},
					{
						"name": "pi__conversion_object_type__c",
						"type": "String"
					},
					{
						"name": "pi__created_date__c",
						"type": "String"
					},
					{
						"name": "pi__first_activity__c",
						"type": "String"
					},
					{
						"name": "pi__first_search_term__c",
						"type": "String"
					},
					{
						"name": "pi__first_search_type__c",
						"type": "String"
					},
					{
						"name": "pi__first_touch_url__c",
						"type": "String"
					},
					{
						"name": "pi__grade__c",
						"type": "String"
					},
					{
						"name": "pi__last_activity__c",
						"type": "String"
					},
					{
						"name": "pi__notes__c",
						"type": "String"
					},
					{
						"name": "pi__pardot_hard_bounced__c",
						"type": "String"
					},
					{
						"name": "pi__score__c",
						"type": "String"
					},
					{
						"name": "pi__url__c",
						"type": "String"
					},
					{
						"name": "pi__utm_campaign__c",
						"type": "String"
					},
					{
						"name": "pi__utm_content__c",
						"type": "String"
					},
					{
						"name": "pi__utm_medium__c",
						"type": "String"
					},
					{
						"name": "pi__utm_source__c",
						"type": "String"
					},
					{
						"name": "pi__utm_term__c",
						"type": "String"
					},
					{
						"name": "DataSource__c",
						"type": "String"
					},
					{
						"name": "EventDate__c",
						"type": "String"
					},
					{
						"name": "InboundInformation1__c",
						"type": "String"
					},
					{
						"name": "InboundInformation2__c",
						"type": "String"
					},
					{
						"name": "InboundInformation3__c",
						"type": "String"
					},
					{
						"name": "InboundOccurrenceDate__c",
						"type": "String"
					},
					{
						"name": "JoinOrNotJoin__c",
						"type": "String"
					},
					{
						"name": "LeadOccurrenceDate__c",
						"type": "String"
					},
					{
						"name": "LeadTypeName__c",
						"type": "String"
					},
					{
						"name": "MailDeliveryPermissionFlag__c",
						"type": "String"
					},
					{
						"name": "MailDeliveryPermissionGetDate__c",
						"type": "String"
					},
					{
						"name": "MailDeliveryPermissionGetSource__c",
						"type": "String"
					},
					{
						"name": "SeminarID__c",
						"type": "String"
					},
					{
						"name": "SeminorName__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_AutomaticKey__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_LocationTransfeProcessingNum__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_LocationTransferErrMsg__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_LocationTransferFlg__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_LocationTransferNextProcessingDate__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_PersonId_FK__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_SLC_Difference__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_SLC__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__CI_SOC_FK__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__ConversionTargetFlg__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__Sansan_CompanyId_FK__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__Sansan_PersonId_FK__c",
						"type": "String"
					},
					{
						"name": "Sansan_CI__Tags__c",
						"type": "String"
					},
					{
						"name": "sci_person_address_city__c",
						"type": "String"
					},
					{
						"name": "sci_person_address_countryCode__c",
						"type": "String"
					},
					{
						"name": "sci_person_address_postalCode__c",
						"type": "String"
					},
					{
						"name": "sci_person_address_state__c",
						"type": "String"
					},
					{
						"name": "sci_person_address_street__c",
						"type": "String"
					},
					{
						"name": "sci_person_department__c",
						"type": "String"
					},
					{
						"name": "sci_person_email__c",
						"type": "String"
					},
					{
						"name": "sci_person_fax__c",
						"type": "String"
					},
					{
						"name": "sci_person_firstName__c",
						"type": "String"
					},
					{
						"name": "sci_person_lastName__c",
						"type": "String"
					},
					{
						"name": "sci_person_mobilePhone__c",
						"type": "String"
					},
					{
						"name": "sci_person_organizationName__c",
						"type": "String"
					},
					{
						"name": "sci_person_phone__c",
						"type": "String"
					},
					{
						"name": "sci_person_position__c",
						"type": "String"
					},
					{
						"name": "sci_sansan_organization_keywords__c",
						"type": "String"
					},
					{
						"name": "sci_sansan_person_occupations__c",
						"type": "String"
					},
					{
						"name": "sci_sansan_person_personId__c",
						"type": "String"
					},
					{
						"name": "sci_sansan_person_positionRank__c",
						"type": "String"
					},
					{
						"name": "sci_sansan_person_tags__c",
						"type": "String"
					},
					{
						"name": "ExcludedFromSendingMailCheckStatus__c",
						"type": "String"
					},
					{
						"name": "ExcludedFromSendingMailCheck__c",
						"type": "String"
					},
					{
						"name": "InvalidOwnerFlag__c",
						"type": "String"
					},
					{
						"name": "KyoikuPersonFlag__c",
						"type": "String"
					},
					{
						"name": "CompanyName__c",
						"type": "String"
					},
					{
						"name": "Remarks__c",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2206030060000373_out')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "CONTENT",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2210270060001002_in')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blob_2210270060001002",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "2210260060000755001_001.csv",
						"container": "2210270060001002-in"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blob_2210270060001002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2210270060001002_out')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Blob_2210270060001002",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Folderpass": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Troubleinfo_h2s.csv",
						"folderPath": {
							"value": "@dataset().Folderpass",
							"type": "Expression"
						},
						"container": "2210270060001002-out"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Blob_2210270060001002')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/7zip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "7zip"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/7zip_ADLSGen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "7zip"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSGen2Binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "exceloutput"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSGen2_csv_in001')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2_datalakestoragetaizawa_MSI",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filePath": {
						"type": "string",
						"defaultValue": "ETL/AD01/work"
					},
					"fileName": {
						"type": "string",
						"defaultValue": "MKI_DMS_RECOVERY"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().filePath",
							"type": "Expression"
						},
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2_datalakestoragetaizawa_MSI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSGen2_csv_out001')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2_datalakestoragetaizawa_MSI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2_datalakestoragetaizawa_MSI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Model",
						"type": "varchar"
					},
					{
						"name": "Length",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Cars"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Books"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "userTest"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics5",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "test20230117"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalytics5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage5",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dummy",
						"container": "renametestinput"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage6",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "outputFile.docx",
						"container": "renametestoutput"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage6')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_CSV_2210280060000080')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "2210280060000080_001.csv",
						"container": "2210280060000080-in"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "num",
						"type": "String"
					},
					{
						"name": "decimal",
						"type": "String"
					},
					{
						"name": "single",
						"type": "String"
					},
					{
						"name": "double",
						"type": "String"
					},
					{
						"name": "string",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_CSV_2210280060000080_out')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "2210280060000080-out"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_DelimitedText')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Jspn1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "20230201_テストデータ.json",
						"container": "2301270060000662"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"event_params": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"key": {
										"type": "string"
									},
									"value": {
										"type": "object",
										"properties": {
											"string_value": {
												"type": "string"
											},
											"int_value": {
												"type": "integer"
											},
											"float_value": {
												"type": "number"
											},
											"double_value": {
												"type": "number"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Xml')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "2301240060000138.xml",
						"container": "2301240060000138"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "2209140060000372input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "2209140060000372input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "2209140060000372output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "test_20221020.csv",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage8",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"container": "2302160060001405"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage8')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage8",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"container": "2302160060001405"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage8')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "master001.csv",
						"container": "2304030060000934"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "VALUE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "master002.csv",
						"container": "2304030060000934"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "CONTENTS",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText_2301180060001129')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "2301180060001129"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText_fromJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "jsonsink"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "coupons_220907_サンプル.csv",
						"container": "jsonconvert"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "coupon_id",
						"type": "String"
					},
					{
						"name": "coupon_code",
						"type": "String"
					},
					{
						"name": "coupon_name",
						"type": "String"
					},
					{
						"name": "status",
						"type": "String"
					},
					{
						"name": "coupon_class",
						"type": "String"
					},
					{
						"name": "coupon_type",
						"type": "String"
					},
					{
						"name": "redeem_method",
						"type": "String"
					},
					{
						"name": "smile_num",
						"type": "String"
					},
					{
						"name": "image_url",
						"type": "String"
					},
					{
						"name": "description",
						"type": "String"
					},
					{
						"name": "description_for_redeem",
						"type": "String"
					},
					{
						"name": "sanrio_event_id",
						"type": "String"
					},
					{
						"name": "number_of_people_required",
						"type": "String"
					},
					{
						"name": "number_of_people_limit",
						"type": "String"
					},
					{
						"name": "stock_unit",
						"type": "String"
					},
					{
						"name": "authority",
						"type": "String"
					},
					{
						"name": "exchange_count_type",
						"type": "String"
					},
					{
						"name": "exchange_limit",
						"type": "String"
					},
					{
						"name": "exchange_criteria",
						"type": "String"
					},
					{
						"name": "redeem_criteria",
						"type": "String"
					},
					{
						"name": "display_used_coupon",
						"type": "String"
					},
					{
						"name": "start_timestamp",
						"type": "String"
					},
					{
						"name": "end_timestamp",
						"type": "String"
					},
					{
						"name": "expiration_date",
						"type": "String"
					},
					{
						"name": "expiration_duration",
						"type": "String"
					},
					{
						"name": "created",
						"type": "String"
					},
					{
						"name": "modified",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText_local')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "user1_data.csv",
						"folderPath": "user1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "json"
					},
					"columnDelimiter": ",",
					"escapeChar": "",
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText_with_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "coupons_220907_サンプル.csv",
						"container": "jsonconvert"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "coupon_id",
						"type": "String"
					},
					{
						"name": "coupon_code",
						"type": "String"
					},
					{
						"name": "coupon_name",
						"type": "String"
					},
					{
						"name": "status",
						"type": "String"
					},
					{
						"name": "coupon_class",
						"type": "String"
					},
					{
						"name": "coupon_type",
						"type": "String"
					},
					{
						"name": "redeem_method",
						"type": "String"
					},
					{
						"name": "smile_num",
						"type": "String"
					},
					{
						"name": "image_url",
						"type": "String"
					},
					{
						"name": "description",
						"type": "String"
					},
					{
						"name": "description_for_redeem",
						"type": "String"
					},
					{
						"name": "sanrio_event_id",
						"type": "String"
					},
					{
						"name": "number_of_people_required",
						"type": "String"
					},
					{
						"name": "number_of_people_limit",
						"type": "String"
					},
					{
						"name": "stock_unit",
						"type": "String"
					},
					{
						"name": "authority",
						"type": "String"
					},
					{
						"name": "exchange_count_type",
						"type": "String"
					},
					{
						"name": "exchange_limit",
						"type": "String"
					},
					{
						"name": "exchange_criteria",
						"type": "String"
					},
					{
						"name": "redeem_criteria",
						"type": "String"
					},
					{
						"name": "display_used_coupon",
						"type": "String"
					},
					{
						"name": "start_timestamp",
						"type": "String"
					},
					{
						"name": "end_timestamp",
						"type": "String"
					},
					{
						"name": "expiration_date",
						"type": "String"
					},
					{
						"name": "expiration_duration",
						"type": "String"
					},
					{
						"name": "created",
						"type": "String"
					},
					{
						"name": "modified",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_0c2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "test",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_0sv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_64o')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_f5e')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_ja0')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "hoge.docx",
						"fileSystem": "exceloutput"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_lda')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_lsz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureFileStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFileStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_vk4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DynamicsEntity365')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dynamics365",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DynamicsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "salesorder"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dynamics365')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DynamicsEntity365_account')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dynamics365",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DynamicsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "account"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dynamics365')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DynamicsEntity365_contact')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dynamics365",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DynamicsEntity",
				"schema": [],
				"typeProperties": {
					"entityName": "contact"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dynamics365')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DynamicsEntity366')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Dynamics365",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DynamicsEntity",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Dynamics365')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelForDynamics365')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "受注",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "20220523_001.xlsx",
						"container": "dynamics365"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "受注ID",
						"type": "String"
					},
					{
						"name": "名前",
						"type": "String"
					},
					{
						"name": "ステータス",
						"type": "String"
					},
					{
						"name": "合計金額",
						"type": "String"
					},
					{
						"name": "顧客",
						"type": "String"
					},
					{
						"name": "電子メール (顧客) (取引先担当者 )",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FTP_CSV_2302160060001405')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FtpServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"fileName": "test_2302160060001405.tar.gz",
						"folderPath": "test"
					},
					"columnDelimiter": ",",
					"compressionCodec": "TarGZip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FtpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileSystemDelimitedText')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HTTPDelimitedText_2301180060001129')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_2301180060001129",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer_2301180060001129')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncLoadTestSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "incLoadTaizawa001",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "varchar"
					},
					{
						"name": "last_name",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "city",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "test_customers_sink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/incLoadTaizawa001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IncLoadTestSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "incLoadTaizawa001",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "varchar"
					},
					{
						"name": "last_name",
						"type": "varchar"
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "city",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "test_customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/incLoadTaizawa001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "json"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoviesCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "movies.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movieId",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MySqlOnVM",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "MySqlTable",
				"schema": [],
				"typeProperties": {
					"tableName": "`sample_view`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MySqlOnVM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputCsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "Id",
						"type": "UTF8"
					},
					{
						"name": "IsDeleted",
						"type": "UTF8"
					},
					{
						"name": "MasterRecordId",
						"type": "UTF8"
					},
					{
						"name": "AccountId",
						"type": "UTF8"
					},
					{
						"name": "LastName",
						"type": "UTF8"
					},
					{
						"name": "FirstName",
						"type": "UTF8"
					},
					{
						"name": "Salutation",
						"type": "UTF8"
					},
					{
						"name": "Name",
						"type": "UTF8"
					},
					{
						"name": "OtherStreet",
						"type": "UTF8"
					},
					{
						"name": "OtherCity",
						"type": "UTF8"
					},
					{
						"name": "OtherState",
						"type": "UTF8"
					},
					{
						"name": "OtherPostalCode",
						"type": "UTF8"
					},
					{
						"name": "OtherCountry",
						"type": "UTF8"
					},
					{
						"name": "OtherLatitude",
						"type": "UTF8"
					},
					{
						"name": "OtherLongitude",
						"type": "UTF8"
					},
					{
						"name": "OtherGeocodeAccuracy",
						"type": "UTF8"
					},
					{
						"name": "MailingStreet",
						"type": "UTF8"
					},
					{
						"name": "MailingCity",
						"type": "UTF8"
					},
					{
						"name": "MailingState",
						"type": "UTF8"
					},
					{
						"name": "MailingPostalCode",
						"type": "UTF8"
					},
					{
						"name": "MailingCountry",
						"type": "UTF8"
					},
					{
						"name": "MailingLatitude",
						"type": "UTF8"
					},
					{
						"name": "MailingLongitude",
						"type": "UTF8"
					},
					{
						"name": "MailingGeocodeAccuracy",
						"type": "UTF8"
					},
					{
						"name": "Phone",
						"type": "UTF8"
					},
					{
						"name": "Fax",
						"type": "UTF8"
					},
					{
						"name": "MobilePhone",
						"type": "UTF8"
					},
					{
						"name": "HomePhone",
						"type": "UTF8"
					},
					{
						"name": "OtherPhone",
						"type": "UTF8"
					},
					{
						"name": "AssistantPhone",
						"type": "UTF8"
					},
					{
						"name": "ReportsToId",
						"type": "UTF8"
					},
					{
						"name": "Email",
						"type": "UTF8"
					},
					{
						"name": "Title",
						"type": "UTF8"
					},
					{
						"name": "Department",
						"type": "UTF8"
					},
					{
						"name": "AssistantName",
						"type": "UTF8"
					},
					{
						"name": "LeadSource",
						"type": "UTF8"
					},
					{
						"name": "Birthdate",
						"type": "UTF8"
					},
					{
						"name": "Description",
						"type": "UTF8"
					},
					{
						"name": "CurrencyIsoCode",
						"type": "UTF8"
					},
					{
						"name": "OwnerId",
						"type": "UTF8"
					},
					{
						"name": "HasOptedOutOfEmail",
						"type": "UTF8"
					},
					{
						"name": "HasOptedOutOfFax",
						"type": "UTF8"
					},
					{
						"name": "DoNotCall",
						"type": "UTF8"
					},
					{
						"name": "CreatedDate",
						"type": "UTF8"
					},
					{
						"name": "CreatedById",
						"type": "UTF8"
					},
					{
						"name": "LastModifiedDate",
						"type": "UTF8"
					},
					{
						"name": "LastModifiedById",
						"type": "UTF8"
					},
					{
						"name": "SystemModstamp",
						"type": "UTF8"
					},
					{
						"name": "LastActivityDate",
						"type": "UTF8"
					},
					{
						"name": "LastCURequestDate",
						"type": "UTF8"
					},
					{
						"name": "LastCUUpdateDate",
						"type": "UTF8"
					},
					{
						"name": "LastViewedDate",
						"type": "UTF8"
					},
					{
						"name": "LastReferencedDate",
						"type": "UTF8"
					},
					{
						"name": "EmailBouncedReason",
						"type": "UTF8"
					},
					{
						"name": "EmailBouncedDate",
						"type": "UTF8"
					},
					{
						"name": "IsEmailBounced",
						"type": "UTF8"
					},
					{
						"name": "PhotoUrl",
						"type": "UTF8"
					},
					{
						"name": "Jigsaw",
						"type": "UTF8"
					},
					{
						"name": "JigsawContactId",
						"type": "UTF8"
					},
					{
						"name": "IndividualId",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_PersonId__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_SOC__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__Sansan_CompanyId__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__Sansan_CompanyInfo__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__Sansan_PersonId__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__Sansan_PersonInfo__c",
						"type": "UTF8"
					},
					{
						"name": "MyDepartmentFlag__c",
						"type": "UTF8"
					},
					{
						"name": "ABC_Evaluation__c",
						"type": "UTF8"
					},
					{
						"name": "ACCOUNT_NAME__c",
						"type": "UTF8"
					},
					{
						"name": "AREA__c",
						"type": "UTF8"
					},
					{
						"name": "Address__c",
						"type": "UTF8"
					},
					{
						"name": "Building__c",
						"type": "UTF8"
					},
					{
						"name": "BusinessLine__c",
						"type": "UTF8"
					},
					{
						"name": "ChangeDate__c",
						"type": "UTF8"
					},
					{
						"name": "City__c",
						"type": "UTF8"
					},
					{
						"name": "Comment__c",
						"type": "UTF8"
					},
					{
						"name": "DeletedFlg__c",
						"type": "UTF8"
					},
					{
						"name": "MyDivisionFlag__c",
						"type": "UTF8"
					},
					{
						"name": "FirstName_Kana__c",
						"type": "UTF8"
					},
					{
						"name": "HasOptedOutOfEmail__c",
						"type": "UTF8"
					},
					{
						"name": "MyOperationsDepartmentFlag__c",
						"type": "UTF8"
					},
					{
						"name": "LastName_Kana__c",
						"type": "UTF8"
					},
					{
						"name": "MailMagazineFlg__c",
						"type": "UTF8"
					},
					{
						"name": "MailingList__c",
						"type": "UTF8"
					},
					{
						"name": "MobilePhone__c",
						"type": "UTF8"
					},
					{
						"name": "ON_Evaluation__c",
						"type": "UTF8"
					},
					{
						"name": "OldSystemSeqNo__c",
						"type": "UTF8"
					},
					{
						"name": "PRG_Evaluation__c",
						"type": "UTF8"
					},
					{
						"name": "PostalCode__c",
						"type": "UTF8"
					},
					{
						"name": "Prefectures__c",
						"type": "UTF8"
					},
					{
						"name": "RoleLevel__c",
						"type": "UTF8"
					},
					{
						"name": "SeminarFlg__c",
						"type": "UTF8"
					},
					{
						"name": "saveFlg__c",
						"type": "UTF8"
					},
					{
						"name": "ABC_Evaluation_Remark__c",
						"type": "UTF8"
					},
					{
						"name": "ABC__c",
						"type": "UTF8"
					},
					{
						"name": "ON__c",
						"type": "UTF8"
					},
					{
						"name": "PRG__c",
						"type": "UTF8"
					},
					{
						"name": "MySectionFlag__c",
						"type": "UTF8"
					},
					{
						"name": "pi__Needs_Score_Synced__c",
						"type": "UTF8"
					},
					{
						"name": "pi__Pardot_Last_Scored_At__c",
						"type": "UTF8"
					},
					{
						"name": "pi__campaign__c",
						"type": "UTF8"
					},
					{
						"name": "pi__comments__c",
						"type": "UTF8"
					},
					{
						"name": "pi__conversion_date__c",
						"type": "UTF8"
					},
					{
						"name": "pi__conversion_object_name__c",
						"type": "UTF8"
					},
					{
						"name": "pi__conversion_object_type__c",
						"type": "UTF8"
					},
					{
						"name": "pi__created_date__c",
						"type": "UTF8"
					},
					{
						"name": "pi__first_activity__c",
						"type": "UTF8"
					},
					{
						"name": "pi__first_search_term__c",
						"type": "UTF8"
					},
					{
						"name": "pi__first_search_type__c",
						"type": "UTF8"
					},
					{
						"name": "pi__first_touch_url__c",
						"type": "UTF8"
					},
					{
						"name": "pi__grade__c",
						"type": "UTF8"
					},
					{
						"name": "pi__last_activity__c",
						"type": "UTF8"
					},
					{
						"name": "pi__notes__c",
						"type": "UTF8"
					},
					{
						"name": "pi__pardot_hard_bounced__c",
						"type": "UTF8"
					},
					{
						"name": "pi__score__c",
						"type": "UTF8"
					},
					{
						"name": "pi__url__c",
						"type": "UTF8"
					},
					{
						"name": "pi__utm_campaign__c",
						"type": "UTF8"
					},
					{
						"name": "pi__utm_content__c",
						"type": "UTF8"
					},
					{
						"name": "pi__utm_medium__c",
						"type": "UTF8"
					},
					{
						"name": "pi__utm_source__c",
						"type": "UTF8"
					},
					{
						"name": "pi__utm_term__c",
						"type": "UTF8"
					},
					{
						"name": "DataSource__c",
						"type": "UTF8"
					},
					{
						"name": "EventDate__c",
						"type": "UTF8"
					},
					{
						"name": "InboundInformation1__c",
						"type": "UTF8"
					},
					{
						"name": "InboundInformation2__c",
						"type": "UTF8"
					},
					{
						"name": "InboundInformation3__c",
						"type": "UTF8"
					},
					{
						"name": "InboundOccurrenceDate__c",
						"type": "UTF8"
					},
					{
						"name": "JoinOrNotJoin__c",
						"type": "UTF8"
					},
					{
						"name": "LeadOccurrenceDate__c",
						"type": "UTF8"
					},
					{
						"name": "LeadTypeName__c",
						"type": "UTF8"
					},
					{
						"name": "MailDeliveryPermissionFlag__c",
						"type": "UTF8"
					},
					{
						"name": "MailDeliveryPermissionGetDate__c",
						"type": "UTF8"
					},
					{
						"name": "MailDeliveryPermissionGetSource__c",
						"type": "UTF8"
					},
					{
						"name": "SeminarID__c",
						"type": "UTF8"
					},
					{
						"name": "SeminorName__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_AutomaticKey__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_LocationTransfeProcessingNum__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_LocationTransferErrMsg__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_LocationTransferFlg__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_LocationTransferNextProcessingDate__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_PersonId_FK__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_SLC_Difference__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_SLC__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__CI_SOC_FK__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__ConversionTargetFlg__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__Sansan_CompanyId_FK__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__Sansan_PersonId_FK__c",
						"type": "UTF8"
					},
					{
						"name": "Sansan_CI__Tags__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_address_city__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_address_countryCode__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_address_postalCode__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_address_state__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_address_street__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_department__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_email__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_fax__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_firstName__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_lastName__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_mobilePhone__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_organizationName__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_phone__c",
						"type": "UTF8"
					},
					{
						"name": "sci_person_position__c",
						"type": "UTF8"
					},
					{
						"name": "sci_sansan_organization_keywords__c",
						"type": "UTF8"
					},
					{
						"name": "sci_sansan_person_occupations__c",
						"type": "UTF8"
					},
					{
						"name": "sci_sansan_person_personId__c",
						"type": "UTF8"
					},
					{
						"name": "sci_sansan_person_positionRank__c",
						"type": "UTF8"
					},
					{
						"name": "sci_sansan_person_tags__c",
						"type": "UTF8"
					},
					{
						"name": "ExcludedFromSendingMailCheckStatus__c",
						"type": "UTF8"
					},
					{
						"name": "ExcludedFromSendingMailCheck__c",
						"type": "UTF8"
					},
					{
						"name": "InvalidOwnerFlag__c",
						"type": "UTF8"
					},
					{
						"name": "KyoikuPersonFlag__c",
						"type": "UTF8"
					},
					{
						"name": "CompanyName__c",
						"type": "UTF8"
					},
					{
						"name": "Remarks__c",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet_ADLS_Gen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2_datalakestoragetaizawa_MSI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "data_b36aa612-aa3a-42c6-a258-b574aa360fd4_0604ed69-5165-406c-af86-4fd6b7d22150.parquet",
						"fileSystem": "2302080010000599"
					},
					"compressionCodec": "none"
				},
				"schema": [
					{
						"name": "ID",
						"type": "INT32"
					},
					{
						"name": "NAME",
						"type": "UTF8"
					},
					{
						"name": "CREATED_YEAR_MONTH_",
						"type": "INT32"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2_datalakestoragetaizawa_MSI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapOdpResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SapOdp1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapOdpResource",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SapOdp1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_0c2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "test",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/test')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_0sv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_64o')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage7",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "CONTENT",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage7')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_cdf')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_f5e')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_ja0')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "*.docx",
						"container": "excelinput"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_lda')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_lsz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Test.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_vk4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StorageAcountBinary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "excelinput"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ftp_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FtpServer1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"prm_dir": {
						"type": "string"
					},
					"prm_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"fileName": {
							"value": "@dataset().prm_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().prm_dir",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FtpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/regExtractTest_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "azureinfo.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "CONTENT",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/regExtractTest_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "MoviesCount",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rerun_test_in')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2_datalakestoragetaizawa_MSI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "in",
						"fileSystem": "rerun-test"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "NAME",
						"type": "String"
					},
					{
						"name": "CONTENT",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2_datalakestoragetaizawa_MSI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rerun_test_out')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2_datalakestoragetaizawa_MSI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "out",
						"fileSystem": "rerun-test"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2_datalakestoragetaizawa_MSI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rerun_test_out2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ADLSGen2_datalakestoragetaizawa_MSI",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('out/', utcnow('yyyyMMddHHmmss'))",
							"type": "Expression"
						},
						"fileSystem": "rerun-test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2_datalakestoragetaizawa_MSI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSGen2_datalakestoragetaizawa_MSI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSGen2_datalakestoragetaizawa_MSI_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('AzureBlobStorage1_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage4')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage4_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage5')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage5_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage6')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage6_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage7')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage7_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage8')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('AzureBlobStorage8_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				},
				"connectVia": {
					"referenceName": "AzureintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage9')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage9_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-314905698721317.17.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-taizawa001/providers/Microsoft.Databricks/workspaces/Taizawa-Databricks-ws",
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "10.4.x-scala2.12",
					"clusterOption": "Fixed",
					"newClusterInitScripts": []
				},
				"connectVia": {
					"referenceName": "AzureintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-314905698721317.17.azuredatabricks.net",
					"authentication": "MSI",
					"workspaceResourceId": "/subscriptions/d050af2c-cbd5-40e7-a95d-c6119e9cf256/resourceGroups/RG-taizawa001/providers/Microsoft.Databricks/workspaces/Taizawa-Databricks-ws",
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "10.4.x-scala2.12",
					"clusterOption": "Fixed",
					"newClusterInitScripts": []
				},
				"connectVia": {
					"referenceName": "AzureintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks_LinkedService_001')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Databricksのテスト",
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-314905698721317.17.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_LinkedService_001_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "2",
					"newClusterVersion": "10.3.x-scala2.12",
					"clusterOption": "Fixed",
					"newClusterInitScripts": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFileStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureFileStorage1_connectionString')]",
					"fileShare": "filesharetest01",
					"snapshot": "2022-06-21T00:00:00.471Z"
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMLService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('AzureMLService1_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureMLService1_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "[parameters('AzureMLService1_properties_typeProperties_mlWorkspaceName')]",
					"authentication": "MSI"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMLService2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('AzureMLService2_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureMLService2_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "[parameters('AzureMLService2_properties_typeProperties_mlWorkspaceName')]",
					"authentication": "MSI"
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMLService3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('AzureMLService3_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureMLService3_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "[parameters('AzureMLService3_properties_typeProperties_mlWorkspaceName')]",
					"authentication": "MSI"
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMLService4')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('AzureMLService4_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureMLService4_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "[parameters('AzureMLService4_properties_typeProperties_mlWorkspaceName')]",
					"authentication": "MSI"
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa3",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('AzurePostgreSql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AzureintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics3_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntimeManagedVnet",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntimeManagedVnet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics4')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics4_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalytics5')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalytics5_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AzureintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_2210270060001002')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('Blob_2210270060001002_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				},
				"connectVia": {
					"referenceName": "AzureintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_SAS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('Blob_SAS_sasUri')]"
				},
				"connectVia": {
					"referenceName": "AzureintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_SAS2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('Blob_SAS2_sasUri')]"
				},
				"connectVia": {
					"referenceName": "AzureintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_SAS3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('Blob_SAS3_sasUri')]"
				},
				"connectVia": {
					"referenceName": "AzureintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDb1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDb1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbApi1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDbMongoDbApi",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbMongoDbApi1_connectionString')]",
					"database": "[parameters('CosmosDbMongoDbApi1_properties_typeProperties_database')]",
					"isServerVersionAbove32": true
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dynamics365')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Dynamics",
				"typeProperties": {
					"deploymentType": "Online",
					"serviceUri": "https://tokaneko-adf.crm7.dynamics.com/",
					"authenticationType": "Office365",
					"username": "[parameters('Dynamics365_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Dynamics365_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServer1_properties_typeProperties_host')]",
					"userId": "[parameters('FileServer1_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServer2_properties_typeProperties_host')]",
					"userId": "[parameters('FileServer2_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServer2_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FtpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ローカル端末",
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('FtpServer1_properties_typeProperties_host')]",
					"port": 21,
					"enableSsl": false,
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('FtpServer1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FtpServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AzureintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer2_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AzureintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer3_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer_2301180060001129')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "BlobからCSVを取得",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer_2301180060001129_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AzureintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MySqlOnVM')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "VM (TaizawaTest01) 上のMySQL",
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"connectionString": "[parameters('MySqlOnVM_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa3",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PostgreSql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "PostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('PostgreSql1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rest_2303060060000184')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "https://disclosure.edinet-fsa.go.jp/api/v1/documents.json?date=2019-04-01&type=2\nから取得",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Rest_2303060060000184_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AzureintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rest_storageacctaizawa')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Rest_storageacctaizawa_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Salesforce1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Salesforce",
				"typeProperties": {
					"environmentUrl": "[parameters('Salesforce1_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('Salesforce1_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Salesforce1_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('Salesforce1_securityToken')]"
					},
					"apiVersion": "54.0",
					"extendedProperties": "ProxyHost=localhost;ProxyPort=3128;CertsPath=C:\\temp\\cafile\\Sf_dev202102.cer"
				},
				"connectVia": {
					"referenceName": "AzureintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesforceServiceCloud1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"aaa": {
						"type": "string",
						"defaultValue": "bbb"
					}
				},
				"annotations": [],
				"type": "SalesforceServiceCloud",
				"typeProperties": {
					"environmentUrl": "[parameters('SalesforceServiceCloud1_properties_typeProperties_environmentUrl')]",
					"username": "[parameters('SalesforceServiceCloud1_properties_typeProperties_username')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SalesforceServiceCloud1_password')]"
					},
					"securityToken": {
						"type": "SecureString",
						"value": "[parameters('SalesforceServiceCloud1_securityToken')]"
					},
					"apiVersion": "52.0"
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapOdp1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapOdp",
				"typeProperties": {
					"clientId": "[parameters('SapOdp1_properties_typeProperties_clientId')]",
					"language": "aaa",
					"sncMode": false,
					"userName": "[parameters('SapOdp1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SapOdp1_password')]"
					},
					"server": "[parameters('SapOdp1_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SapOdp1_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SapTable1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "てすと",
				"annotations": [],
				"type": "SapTable",
				"typeProperties": {
					"clientId": "[parameters('SapTable1_properties_typeProperties_clientId')]",
					"sncMode": false,
					"userName": "[parameters('SapTable1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SapTable1_password')]"
					},
					"server": "[parameters('SapTable1_properties_typeProperties_server')]",
					"systemNumber": "[parameters('SapTable1_properties_typeProperties_systemNumber')]"
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sftp1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('Sftp1_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": false,
					"hostKeyFingerprint": "[parameters('Sftp1_properties_typeProperties_hostKeyFingerprint')]",
					"authenticationType": "Basic",
					"userName": "[parameters('Sftp1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Sftp1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sftp2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('Sftp2_properties_typeProperties_host')]",
					"port": 22,
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Sftp2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Sftp2_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SharePointOnlineList1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SharePointOnlineList",
				"typeProperties": {
					"siteUrl": "https://jpdsd2.sharepoint.com/sites/SiteTest20230301",
					"tenantId": "a0a58ec7-09e8-41f9-ae5a-0d67d1ccabc5",
					"servicePrincipalId": "[parameters('SharePointOnlineList1_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('SharePointOnlineList1_servicePrincipalKey')]"
					}
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SharePointOnlineList2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SharePointOnlineList",
				"typeProperties": {
					"siteUrl": "https://jpdsd2.sharepoint.com/sites/SiteTest20230301",
					"tenantId": "a0a58ec7-09e8-41f9-ae5a-0d67d1ccabc5",
					"servicePrincipalId": "[parameters('SharePointOnlineList2_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "SharePoint-jpdsd2"
					}
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SharePointOnlineList_admin2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SharePointOnlineList",
				"typeProperties": {
					"siteUrl": "https://m365x78964420.sharepoint.com/sites/Test/",
					"tenantId": "258711a2-7ca6-44f7-b8c8-2e5fb1833f7c",
					"servicePrincipalId": "[parameters('SharePointOnlineList_admin2_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('SharePointOnlineList_admin2_servicePrincipalKey')]"
					}
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SharePointOnlineList_owner02')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SharePointOnlineList",
				"typeProperties": {
					"siteUrl": "https://m365x78964420.sharepoint.com/sites/Test/",
					"tenantId": "258711a2-7ca6-44f7-b8c8-2e5fb1833f7c",
					"servicePrincipalId": "[parameters('SharePointOnlineList_owner02_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('SharePointOnlineList_owner02_servicePrincipalKey')]"
					}
				},
				"connectVia": {
					"referenceName": "SHIR-taizawa2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR-taizawa2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Snowflake",
				"typeProperties": {
					"authenticationType": "Basic",
					"connectionString": "[parameters('Snowflake1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AzureintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/incLoadTaizawa001')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('incLoadTaizawa001_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService_for _staging')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('linkedService_for _staging_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				},
				"connectVia": {
					"referenceName": "AzureintegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AzureintegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('test_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/0805Test01_1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pipeline4",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2022-08-05T02:16:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/0805Test01_2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pipeline4",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2022-08-05T02:18:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 2,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/0825Test_01')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pipeline4",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2022-08-25T07:30:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "SelfDependencyTumblingWindowTriggerReference",
							"offset": "-0.15:00:00"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/0825Test_02')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "wait",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2022-08-25T08:00:00Z",
					"endTime": "2022-10-02T00:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "SelfDependencyTumblingWindowTriggerReference",
							"offset": "-0.00:15:00"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/wait')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobEventsTrigger001')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TriggerTest",
							"type": "PipelineReference"
						},
						"parameters": {
							"p1": "[parameters('BlobEventsTrigger001_properties_TriggerTest_parameters_p1')]",
							"p2": "[parameters('BlobEventsTrigger001_properties_TriggerTest_parameters_p2')]",
							"p3": "[parameters('BlobEventsTrigger001_properties_TriggerTest_parameters_p3')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/root/blobs/202206",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('BlobEventsTrigger001_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TriggerTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SchduleTrigger001')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TriggerTest",
							"type": "PipelineReference"
						},
						"parameters": {
							"p1": "[parameters('SchduleTrigger001_properties_TriggerTest_parameters_p1')]",
							"p2": "[parameters('SchduleTrigger001_properties_TriggerTest_parameters_p2')]",
							"p3": "[parameters('SchduleTrigger001_properties_TriggerTest_parameters_p3')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 20,
						"startTime": "2022-06-07T05:30:00Z",
						"endTime": "2022-06-07T06:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TriggerTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Schdule_TriggerTest003')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TriggerTest",
							"type": "PipelineReference"
						},
						"parameters": {
							"p1": "[parameters('Schdule_TriggerTest003_properties_TriggerTest_parameters_p1')]",
							"p2": "[parameters('Schdule_TriggerTest003_properties_TriggerTest_parameters_p2')]",
							"p3": "[parameters('Schdule_TriggerTest003_properties_TriggerTest_parameters_p3')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "pipeline1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2022-07-15T04:02:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								40
							],
							"hours": [
								10
							],
							"monthDays": [
								-31,
								-30,
								-29,
								-27,
								-26,
								-25,
								-24,
								-23,
								-22,
								-21,
								-20,
								-19,
								-18,
								-17,
								-16,
								-15,
								-14,
								-13,
								-12,
								-11,
								-10,
								-9,
								-8,
								-7,
								-6,
								-5,
								-4,
								-3,
								-2,
								1,
								2,
								3,
								4
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TriggerTest')]",
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ScheduleTriggerTest')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2022-07-01T00:58:00",
						"timeZone": "Tokyo Standard Time",
						"schedule": {
							"monthDays": [
								1
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Schedule_TriggerTest002')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "マイナス値のテスト",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TriggerTest",
							"type": "PipelineReference"
						},
						"parameters": {
							"p1": "[parameters('Schedule_TriggerTest002_properties_TriggerTest_parameters_p1')]",
							"p2": "[parameters('Schedule_TriggerTest002_properties_TriggerTest_parameters_p2')]",
							"p3": "[parameters('Schedule_TriggerTest002_properties_TriggerTest_parameters_p3')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2022-07-15T03:58:00",
						"endTime": "2022-07-31T23:58:00",
						"timeZone": "Tokyo Standard Time",
						"schedule": {
							"minutes": [
								5
							],
							"hours": [
								13
							],
							"monthDays": [
								-17,
								1,
								-1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TriggerTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TriggerA')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pipeline1",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 168,
					"startTime": "2022-07-23T15:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TriggerB')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pipeline1",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 168,
					"startTime": "2022-07-23T15:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "TriggerA",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]",
				"[concat(variables('factoryId'), '/triggers/TriggerA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger10')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "JSON_convert2",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2023-09-25T13:57:00",
						"endTime": "2023-09-26T13:57:00",
						"timeZone": "Tokyo Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/JSON_convert2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger4')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "2206030060000373_CSV",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2022-06-29T06:30:00Z",
						"endTime": "2022-06-30T06:50:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/2206030060000373_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger5')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "7z_Copy",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2022-07-25T04:45:00Z",
					"endTime": "2022-07-28T00:35:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/7z_Copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger6')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "7z_Copy",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2022-07-25T04:45:00Z",
					"endTime": "2022-07-28T00:35:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "trigger5",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/7z_Copy')]",
				"[concat(variables('factoryId'), '/triggers/trigger5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger8')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "wait",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2022-08-22T12:15:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 1,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "SelfDependencyTumblingWindowTriggerReference",
							"offset": "-0.00:15:00"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/wait')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger9')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "powershellTest",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2023-03-17T05:17:00Z",
						"endTime": "2023-04-17T06:14:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/powershellTest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureintegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Japan East",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/JapanWest-AzureintegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR-taizawa1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR-taizawa2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR-taizawa3')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ccc')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Japan East",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntimeManagedVnet')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "Japan East",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2210270060001002_DF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "2210270060001002_in",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2210270060001002_out",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['Troubleinfo_h2s.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2210270060001002_in')]",
				"[concat(variables('factoryId'), '/datasets/2210270060001002_out')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_2206270060000972')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DataFlowのソースで、完了後にファイルを移動するオプションの挙動を確認。",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ADLSGen2_csv_in001",
								"type": "DatasetReference"
							},
							"name": "ADLSGen2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ADLSGen2_csv_out001",
								"type": "DatasetReference"
							},
							"name": "ADLSGen2out"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     azureRootFolder as string ('ETL/AD01'),",
						"     ftpFileName as string ('MKI_DMS_RECOVERY')",
						"}",
						"source(output(",
						"          ID as short,",
						"          NAME as string,",
						"          CONTENT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     moveFiles: [(concatWS('/work/', $azureRootFolder, '')),(concatWS('/', $azureRootFolder, 'backup', toString(fromUTC(currentUTC(), 'Asia/Tokyo'),'yyyyMMddHHmmss'), $ftpFileName))]) ~> ADLSGen2",
						"ADLSGen2 derive(Test = ID) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['test.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ADLSGen2out"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ADLSGen2_csv_in001')]",
				"[concat(variables('factoryId'), '/datasets/ADLSGen2_csv_out001')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataverse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ExcelForDynamics365",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DynamicsEntity365_account",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     test as string ({顧客})",
						"}",
						"source(output(",
						"          {受注ID} as string,",
						"          {名前} as string,",
						"          {ステータス} as string,",
						"          {合計金額} as string,",
						"          {顧客} as string,",
						"          {電子メール (顧客) (取引先担当者 )} as string,",
						"          Type as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(odata = iif(isNull({顧客}), toString(null()), concat('contacts/',{顧客})),",
						"          odata2 = iif(isNull({顧客}), toString(null()), concat(concat('/contacts(',{顧客}), ')'))) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          accountid = {受注ID},",
						"          {primarycontactid@odata.bind} = odata",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ExcelForDynamics365')]",
				"[concat(variables('factoryId'), '/datasets/DynamicsEntity365_account')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoviesCleanFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MoviesCsv",
								"type": "DatasetReference"
							},
							"name": "movies"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OutputCsv",
								"type": "DatasetReference"
							},
							"name": "MoviesClean"
						},
						{
							"dataset": {
								"referenceName": "OutputCsv",
								"type": "DatasetReference"
							},
							"name": "MoviesByYearSink"
						}
					],
					"transformations": [
						{
							"name": "YearExtraction"
						},
						{
							"name": "MoviesByYear"
						}
					],
					"scriptLines": [
						"source(output(",
						"          movieId as string,",
						"          title as string,",
						"          genres as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> movies",
						"movies derive(Year = toInteger(trim(right(title, 6), '()')),",
						"          title = toString(left(title, length(title)-6))) ~> YearExtraction",
						"YearExtraction aggregate(groupBy(Year),",
						"     MoviesCount = count(),",
						"     partitionBy('roundRobin', 2)) ~> MoviesByYear",
						"YearExtraction sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['movies-clean.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> MoviesClean",
						"MoviesByYear sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['movies-by-year.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> MoviesByYearSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MoviesCsv')]",
				"[concat(variables('factoryId'), '/datasets/OutputCsv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Storage_To_Synapse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Synapseでテーブル再作成を試す",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "2206030060000373_in",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSynapseAnalyticsTable1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Id as string,",
						"          IsDeleted as string,",
						"          MasterRecordId as string,",
						"          AccountId as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          Salutation as string,",
						"          Name as string,",
						"          OtherStreet as string,",
						"          OtherCity as string,",
						"          OtherState as string,",
						"          OtherPostalCode as string,",
						"          OtherCountry as string,",
						"          OtherLatitude as string,",
						"          OtherLongitude as string,",
						"          OtherGeocodeAccuracy as string,",
						"          MailingStreet as string,",
						"          MailingCity as string,",
						"          MailingState as string,",
						"          MailingPostalCode as string,",
						"          MailingCountry as string,",
						"          MailingLatitude as string,",
						"          MailingLongitude as string,",
						"          MailingGeocodeAccuracy as string,",
						"          Phone as string,",
						"          Fax as string,",
						"          MobilePhone as string,",
						"          HomePhone as string,",
						"          OtherPhone as string,",
						"          AssistantPhone as string,",
						"          ReportsToId as string,",
						"          Email as string,",
						"          Title as string,",
						"          Department as string,",
						"          AssistantName as string,",
						"          LeadSource as string,",
						"          Birthdate as string,",
						"          Description as string,",
						"          CurrencyIsoCode as string,",
						"          OwnerId as string,",
						"          HasOptedOutOfEmail as string,",
						"          HasOptedOutOfFax as string,",
						"          DoNotCall as string,",
						"          CreatedDate as string,",
						"          CreatedById as string,",
						"          LastModifiedDate as string,",
						"          LastModifiedById as string,",
						"          SystemModstamp as string,",
						"          LastActivityDate as string,",
						"          LastCURequestDate as string,",
						"          LastCUUpdateDate as string,",
						"          LastViewedDate as string,",
						"          LastReferencedDate as string,",
						"          EmailBouncedReason as string,",
						"          EmailBouncedDate as string,",
						"          IsEmailBounced as string,",
						"          PhotoUrl as string,",
						"          Jigsaw as string,",
						"          JigsawContactId as string,",
						"          IndividualId as string,",
						"          Sansan_CI__CI_PersonId__c as string,",
						"          Sansan_CI__CI_SOC__c as string,",
						"          Sansan_CI__Sansan_CompanyId__c as string,",
						"          Sansan_CI__Sansan_CompanyInfo__c as string,",
						"          Sansan_CI__Sansan_PersonId__c as string,",
						"          Sansan_CI__Sansan_PersonInfo__c as string,",
						"          MyDepartmentFlag__c as string,",
						"          ABC_Evaluation__c as string,",
						"          ACCOUNT_NAME__c as string,",
						"          AREA__c as string,",
						"          Address__c as string,",
						"          Building__c as string,",
						"          BusinessLine__c as string,",
						"          ChangeDate__c as string,",
						"          City__c as string,",
						"          Comment__c as string,",
						"          DeletedFlg__c as string,",
						"          MyDivisionFlag__c as string,",
						"          FirstName_Kana__c as string,",
						"          HasOptedOutOfEmail__c as string,",
						"          MyOperationsDepartmentFlag__c as string,",
						"          LastName_Kana__c as string,",
						"          MailMagazineFlg__c as string,",
						"          MailingList__c as string,",
						"          MobilePhone__c as string,",
						"          ON_Evaluation__c as string,",
						"          OldSystemSeqNo__c as string,",
						"          PRG_Evaluation__c as string,",
						"          PostalCode__c as string,",
						"          Prefectures__c as string,",
						"          RoleLevel__c as string,",
						"          SeminarFlg__c as string,",
						"          saveFlg__c as string,",
						"          ABC_Evaluation_Remark__c as string,",
						"          ABC__c as string,",
						"          ON__c as string,",
						"          PRG__c as string,",
						"          MySectionFlag__c as string,",
						"          pi__Needs_Score_Synced__c as string,",
						"          pi__Pardot_Last_Scored_At__c as string,",
						"          pi__campaign__c as string,",
						"          pi__comments__c as string,",
						"          pi__conversion_date__c as string,",
						"          pi__conversion_object_name__c as string,",
						"          pi__conversion_object_type__c as string,",
						"          pi__created_date__c as string,",
						"          pi__first_activity__c as string,",
						"          pi__first_search_term__c as string,",
						"          pi__first_search_type__c as string,",
						"          pi__first_touch_url__c as string,",
						"          pi__grade__c as string,",
						"          pi__last_activity__c as string,",
						"          pi__notes__c as string,",
						"          pi__pardot_hard_bounced__c as string,",
						"          pi__score__c as string,",
						"          pi__url__c as string,",
						"          pi__utm_campaign__c as string,",
						"          pi__utm_content__c as string,",
						"          pi__utm_medium__c as string,",
						"          pi__utm_source__c as string,",
						"          pi__utm_term__c as string,",
						"          DataSource__c as string,",
						"          EventDate__c as string,",
						"          InboundInformation1__c as string,",
						"          InboundInformation2__c as string,",
						"          InboundInformation3__c as string,",
						"          InboundOccurrenceDate__c as string,",
						"          JoinOrNotJoin__c as string,",
						"          LeadOccurrenceDate__c as string,",
						"          LeadTypeName__c as string,",
						"          MailDeliveryPermissionFlag__c as string,",
						"          MailDeliveryPermissionGetDate__c as string,",
						"          MailDeliveryPermissionGetSource__c as string,",
						"          SeminarID__c as string,",
						"          SeminorName__c as string,",
						"          Sansan_CI__CI_AutomaticKey__c as string,",
						"          Sansan_CI__CI_LocationTransfeProcessingNum__c as string,",
						"          Sansan_CI__CI_LocationTransferErrMsg__c as string,",
						"          Sansan_CI__CI_LocationTransferFlg__c as string,",
						"          Sansan_CI__CI_LocationTransferNextProcessingDate__c as string,",
						"          Sansan_CI__CI_PersonId_FK__c as string,",
						"          Sansan_CI__CI_SLC_Difference__c as string,",
						"          Sansan_CI__CI_SLC__c as string,",
						"          Sansan_CI__CI_SOC_FK__c as string,",
						"          Sansan_CI__ConversionTargetFlg__c as string,",
						"          Sansan_CI__Sansan_CompanyId_FK__c as string,",
						"          Sansan_CI__Sansan_PersonId_FK__c as string,",
						"          Sansan_CI__Tags__c as string,",
						"          sci_person_address_city__c as string,",
						"          sci_person_address_countryCode__c as string,",
						"          sci_person_address_postalCode__c as string,",
						"          sci_person_address_state__c as string,",
						"          sci_person_address_street__c as string,",
						"          sci_person_department__c as string,",
						"          sci_person_email__c as string,",
						"          sci_person_fax__c as string,",
						"          sci_person_firstName__c as string,",
						"          sci_person_lastName__c as string,",
						"          sci_person_mobilePhone__c as string,",
						"          sci_person_organizationName__c as string,",
						"          sci_person_phone__c as string,",
						"          sci_person_position__c as string,",
						"          sci_sansan_organization_keywords__c as string,",
						"          sci_sansan_person_occupations__c as string,",
						"          sci_sansan_person_personId__c as string,",
						"          sci_sansan_person_positionRank__c as string,",
						"          sci_sansan_person_tags__c as string,",
						"          ExcludedFromSendingMailCheckStatus__c as string,",
						"          ExcludedFromSendingMailCheck__c as string,",
						"          InvalidOwnerFlag__c as string,",
						"          KyoikuPersonFlag__c as string,",
						"          CompanyName__c as string,",
						"          Remarks__c as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     allowCopyCommand: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2206030060000373_in')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "regExtractTest_input",
								"type": "DatasetReference"
							},
							"name": "inputCsv"
						}
					],
					"sinks": [
						{
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as string,",
						"          NAME as string,",
						"          CONTENT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> inputCsv",
						"inputCsv derive(MAIL = regexExtract(CONTENT, '(\\\\d+)@mitsuichemicals.com', 1),",
						"          MAIL2 = regexExtract(CONTENT, '([0-9]+)@mitsuichemicals.com', 1),",
						"          {列1} = regexExtract(CONTENT, '(\\\\d+@mitsuichemicals.com)', 1),",
						"          {列2} = regexExtract(CONTENT, '([0-9]+@mitsuichemicals\\\\.com)', 1)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/regExtractTest_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1_copy1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "regExtractTest_input",
								"type": "DatasetReference"
							},
							"name": "inputCsv"
						}
					],
					"sinks": [
						{
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     num as integer (0)",
						"}",
						"source(output(",
						"          ID as string,",
						"          NAME as string,",
						"          CONTENT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> inputCsv",
						"inputCsv derive(MAIL = regexExtract(CONTENT, '(\\\\d+)@mitsuichemicals.com', 1),",
						"          MAIL2 = regexExtract(CONTENT, '([0-9]+)@mitsuichemicals.com', 1),",
						"          {列1} = regexExtract(CONTENT, '(\\\\d+@mitsuichemicals.com)', 1),",
						"          {列2} = regexExtract(CONTENT, '([0-9]+@mitsuichemicals\\\\.com)', 1)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/regExtractTest_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText2",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText3",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('roundRobin', 1010)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Blob_Jspn1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Blob_Jspn1",
								"type": "DatasetReference"
							},
							"name": "sink1",
							"description": "データを Blob_Jsn1 にエクスポートします"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "derivedColumn2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          event_params as (key as string, value as (string_value as string, int_value as integer, float_value as double, double_value as double))[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'arrayOfDocuments') ~> source1",
						"source1 derive(target_param = find(event_params, #item.key=='abcd')) ~> derivedColumn1",
						"derivedColumn1 derive(target_value = target_param.value.string_value) ~> derivedColumn2",
						"derivedColumn2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          event_params as (key as string, value as (string_value as string, int_value as integer, float_value as double, double_value as double))[]",
						"     ),",
						"     partitionFileNames:['result.json'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Blob_Jspn1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_2304030060000934_2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "参照変換と派生列変換のテスト",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText7",
								"type": "DatasetReference"
							},
							"name": "SAP"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText8",
								"type": "DatasetReference"
							},
							"name": "Dynamics"
						}
					],
					"sinks": [
						{
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "lookup1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as string,",
						"          NAME as string,",
						"          VALUE as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> SAP",
						"source(output(",
						"          ID as string,",
						"          NAME as string,",
						"          CONTENTS as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Dynamics",
						"SAP, Dynamics lookup(SAP@NAME == Dynamics@NAME,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookup1",
						"lookup1 derive(CONTENTS = iif(isNull(CONTENTS), \"-\", CONTENTS)) ~> derivedColumn1",
						"derivedColumn1 sink(validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     store: 'cache',",
						"     format: 'inline',",
						"     output: false,",
						"     saveOrder: 1) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText7')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText8')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_SqlToBlob')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText4",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID as integer,",
						"          Name as string,",
						"          Model as string,",
						"          Length as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'select * from dbo.Cars',",
						"     format: 'query') ~> source1",
						"source1 derive(test = add(ID,100000)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureFileStorage222')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureFileStorage222_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureFileStorage222_properties_groupId')]",
				"fqdns": "[parameters('AzureFileStorage222_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureFunction584')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureFunction584_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureFunction584_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureKeyVault400')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureKeyVault400_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureKeyVault400_properties_groupId')]",
				"fqdns": "[parameters('AzureKeyVault400_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureSynapseAnalytics001')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureSynapseAnalytics001_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureSynapseAnalytics001_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/PrivateLinkService892')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('PrivateLinkService892_properties_privateLinkResourceId')]",
				"groupId": "[parameters('PrivateLinkService892_properties_groupId')]",
				"fqdns": "[parameters('PrivateLinkService892_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		}
	]
}